<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <description>Um blog sobre tecnologia e todas as angústias e alegrias que a cercam.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 11 Apr 2020 13:30:13 -0300</pubDate>
    <lastBuildDate>Sat, 11 Apr 2020 13:30:13 -0300</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>
    
      <item>
        <title>a origem do noSurf</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://medium.com/@netoguimaraes/notas-sobre-autodidatismo-84c1357e38c0&quot;&gt;texto no medium&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;neste texto introduzirei o movimento NoSurf, suas origens e motivações. algo de grande importância para o momento em que vivemos mas ainda pouco falado.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;mais-umdia&quot;&gt;mais um dia&lt;/h2&gt;

&lt;p&gt;imagine a seguinte cena: são 10 da manhã. você acordou às 8h30, mas ainda não fez nada. está se atualizando sobre o que está acontecendo ao redor do mundo, vendo os vídeos dos seus canais favoritos do youtube, rolando o feed do instagram e vendo os tweets que você perdeu enquanto dormia.&lt;/p&gt;

&lt;p&gt;ops, são 11h horas, tem que fazer o almoço. você coloca aquele podcast engraçado e segue pra cozinha.&lt;/p&gt;

&lt;p&gt;ao terminar de preparar o almoço, você volta pro youtube e coloca algo leve para assistir enquanto come. lava a louça enquanto escuta mais um podcast. sai de casa para fazer suas obrigações, ainda ouvindo o podcast. enquanto está no ônibus, escreve uns tweets sobre as amenidades do dia. enquanto está na aula, verifica suas notificações periodicamente, vai que alguém falou alguma coisa importante. ao chegar em casa depois de um dia cansativo, coloca o celular pra carregar e fica rolando a timeline do twitter até dar sono. e o ciclo se repete.&lt;/p&gt;

&lt;p&gt;fim da cena.&lt;/p&gt;

&lt;p&gt;essa é a vida comum de qualquer pessoa da minha geração, com uma margem de erro de alguns anos pra cima ou pra baixo. e não há nada de necessariamente errado com ela, se ela for realmente pensada e planejada para ser assim: um grande consumo de informações sem tempo para respiro nem para um processamento decente da mesma. o grande problema é que este comportamento não é necessariamente consciente. boa parte desse tempo estamos executando o que os NoSurfers entendem como Mindless Browsing (Navegação inconsciente, em tradução livre). Mas o que diabos é esse movimento NoSurf?&lt;/p&gt;

&lt;p&gt;em linhas gerais, é um movimento que prega a eliminação desta Navegação Inconsciente. não o fim de forma ditatorial, como se fossem uma casta superior - apesar de existirem os chatos que se acham donos do mundo por terem excluídos todas as suas redes sociais. o movimento tem o objetivo de reunir e incentivar as pessoas a fim de melhorar certos aspectos que a navegação inconsciente acaba atingindo: autoestima, ansiedade, depressão, autoconhecimento e etc.&lt;/p&gt;

&lt;p&gt;mas como isso surgiu? porque alguém ficaria com uma pulga atrás da orelha com um tópico tão cotidiano como o acesso à informação na internet?&lt;/p&gt;

&lt;h2 id=&quot;as-redessociais&quot;&gt;As redes sociais&lt;/h2&gt;
&lt;p&gt;o ser humano é social, isso é um fato.&lt;/p&gt;

&lt;p&gt;por isso que uma de nossas punições mais comuns é tirar a liberdade (prisão). desde sempre gostamos de interagir uns com os outros. seja ao redor de uma fogueira enquanto assamos a carne do animal que acabamos de caçar ou através de um like na foto do seu broder na academia. sempre foi assim, seres humanos discutindo, se elogiando e se influenciando. as redes sociais são só uma representação do que sempre fizemos.&lt;/p&gt;

&lt;p&gt;mas sem sombra de dúvidas, elas são uma das principais causadoras do Mindless Browsing. e digo mais: foi a indústria das redes sociais que criou o conceito de navegação inconsciente. e aqui explico para o leitor: todas as redes são empresas. &lt;/p&gt;

&lt;p&gt;empresas são instituições que tem como principal objetivo arrecadar dinheiro, seja pra pagar seus funcionários, manter-se funcionando ou fazer seus donos lucrarem. essa é a premissa básica do capitalismo, onde todos precisam de dinheiro pra viver e quanto mais dinheiro melhor. o grande plot desta história é que as empresas por trás das redes ganham dinheiro através de cliques e pelo tempo que as pessoas passam em suas páginas ou aplicativos, basicamente. ou seja, quanto mais tempo o usuário passa no app, mais receita é gerada. logo, o pensamento mais básico dessas empresas é o de criar mecanismos para fazer com que cada vez mais os usuários passem mais tempo por ali. e obviamente, não se pode forçar ninguém a ficar num app, portanto essas travas devem ser psicológicas.&lt;/p&gt;

&lt;p&gt;então, ao longo dos anos, foram sendo desenvolvidas estratégias psicológicas para que cada vez mais as pessoas sentissem vontade de permanecer nos respectivos apps e sites. estratégias de incentivo para criadores de conteúdos também aparecem aí no meio. afinal, quanto mais gente criando conteúdo diverso, mais público é atingido e mais gente quer ver o que tá acontecendo.&lt;/p&gt;

&lt;h2 id=&quot;criou-se-ummonstro&quot;&gt;criou-se um monstro&lt;/h2&gt;

&lt;p&gt;a bola de neve foi girando e com os anos, temos um cenário infalível: vídeos de gatinhos, discussões sobre os temas mais atuais, gente se fudendo de maneira engraçada, gente bonita e rica falando sobre suas vidas, notícias sobre a guerra na síria e estudos científicos sobre obesidade nos estados unidos. tudo isso nos estimulando o dia inteiro, varando madrugadas. e o mais sádico: sem fim. sempre dá pra rolar mais um pouquinho pra baixo. as timelines foram sendo desenvolvidas de maneira a você nunca chegar no final. e se chegar, ter algum outro mecanismo para buscar conteúdos novos.&lt;/p&gt;

&lt;p&gt;tantos estímulos acabam causando a sensação de falsa produtividade, onde você sente que está consumindo tudo aquilo, que está fazendo varias coisas ao mesmo tempo, mas na verdade essas informações acabam passando despercebidas, em sua maioria. é só aquele estímulo: leve, gostoso e efêmero. porém bons o suficiente para conseguirem enganar nossos cérebros, de maneira a fazer com que ele acostume-se com o fluxo de informações e aceite que aquele é o ritmo natural.&lt;/p&gt;

&lt;p&gt;ao ser exposta a esta nova naturalidade, nosso cérebro começa a se acostumar com a ideia de que ele não precisa necessariamente processar tudo que vê. tudo passa a consistir em uma dose de sentimentos bons, que fragmentam as nossas ansiedades, nos fazem escapar um pouquinho da realidade e nos sentirmos mais calmos. &lt;/p&gt;

&lt;p&gt;é aí que começa a navegação inconsciente.&lt;/p&gt;

&lt;p&gt;quando passamos a não pensar mais se queremos realmente estar no instagram. quando estar com o celular na mão vendo qualquer coisa é o estado natural, mesmo que no fundo os desejos fossem outros. é quando esse processo todo passa a existir pelo simples fato de ser confortável. é nesse momento também que passa a ser difícil ler um texto como esse, com mais de 2 ou 3 parágrafos, uma ideia sendo dissecada de forma tão brutal.&lt;/p&gt;

&lt;p&gt;e o noSurf cresce em cima da indignação gerada por todo esse contexto. evitar o Mindless Browsing é um movimento contrário ao que conhecemos como o maior bem do século: a quantidade de informação que temos a nosso favor. sim, é fato que esta geração é privilegiada por ter nascido num contexto onde podemos saber tudo sobre qualquer coisa a qualquer momento. mas o que exatamente estamos construindo com isso?&lt;/p&gt;

&lt;p&gt;pra falar a verdade, essa quantidade de informação tem gerado muitos reflexos negativos. caso tenha interesse, pesquise sobre “internet e ansiedade”, “social networks and anxiety” e termos similares.&lt;/p&gt;

&lt;h2 id=&quot;saindo-dacaverna&quot;&gt;saindo da caverna&lt;/h2&gt;

&lt;p&gt;toda essa narrativa se assemelha com o mito da caverna de platão, onde os prisioneiros não possuem conhecimento do que há de verdade do lado de fora da caverna e se contentam com sombras. mas agora, tendo sido expostos os fatos, o que fazer?&lt;/p&gt;

&lt;p&gt;passar a refletir mais sobre o que realmente estamos fazendo na internet é uma saída. se realmente estamos consumindo tudo que achamos que estamos. se essas coisas nos fazem bem, no auxiliam a alcançar objetivos. há até os perderam seus objetivos em meio a tanto caos e informação.&lt;/p&gt;

&lt;p&gt;o movimento ainda é pequeno em termos de Brasil, mas há sempre pano pra manga. todo esse contexto envolve uma análise crítica e individual, o movimento serve apenas para reunir pessoas e fazer elas trocarem experiências, mas ele se faz a partir do indivíduo por si só. o questionamento que quero levanta é: você é consciente do uso que você faz da internet?&lt;/p&gt;
</description>
        <pubDate>Fri, 10 Apr 2020 00:00:00 -0300</pubDate>
        <link>http://localhost:4000/2020/04/10/UX-a-origem-do-noSurf.html</link>
        <guid isPermaLink="true">http://localhost:4000/2020/04/10/UX-a-origem-do-noSurf.html</guid>
        
        <category>aprendizado,</category>
        
        <category>autodidatismo</category>
        
        
      </item>
    
      <item>
        <title>notas sobre autodidatismo</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://medium.com/@netoguimaraes/notas-sobre-autodidatismo-84c1357e38c0&quot;&gt;texto no medium&lt;/a&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;neste texto, introduzirei o real conceito de autodidatismo e darei um passo a passo de como aplicá-lo no seu cotidiano, seja para qual finalidade for, usando exemplos pessoais com o objetivo de dar o tom realista a algo que soa tão abstrato.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;desmistificando-oconceito&quot;&gt;desmistificando o conceito&lt;/h2&gt;
&lt;p&gt;para muita gente, o conceito de autodidatismo tem relação direta com a capacidade de se aprender algo sozinho. mas será que isso faz sentido?&lt;/p&gt;

&lt;p&gt;o ato de aprender tem relação com a absorção de conhecimento, que por sua vez, é produzido pelos seres humanos e registrado através de diversos meios que se desenvolveram ao longo de nossa história: livros, filmes, músicas ou diários. aqui é onde mora uma diferença sutil entre aprendizado e criação de conteúdo. o aprendizado tem a ver com absorver o conteúdo que já foi explorado por alguém. a criação tem a ver com explorar coisas novas, adentrar ambientes em que ninguém nunca explorou. autodidatas não necessariamente produzem conteúdos novos, eles em geral apenas absorvem do conhecimento que já foi documentado, mas fazem isso de uma maneira diferente da tradicional (escolas, cursos e workshops).&lt;/p&gt;

&lt;p&gt;logo, o conceito que temos de autodidatismo soa errado ao ver com esses olhos. autodidata não é quem aprende sozinho, mas sim aquele que constrói sua própria metodologia de aprendizado, se desvirtuando assim da forma tradicional de ensino. autodidatismo não tem a ver com criar conceitos novos, mas sim com criar sua própria didática.&lt;/p&gt;

&lt;h3 id=&quot;mas-porque-criar-suas-próprias-metodologias&quot;&gt;mas porque criar suas próprias metodologias?&lt;/h3&gt;

&lt;p&gt;e o fator que leva os autodidatas a criarem suas próprias metodologias é muito simples: aprender da forma tradicional é muito chato. sentar 6 horas por dia numa sala com mais 30 pessoas e ouvir professores falando é muito maçante. ter que ler livros e mais livros escolhidos por outras pessoas na esperança de que aquilo vai te trazer o conhecimento que você quer talvez não seja a melhor maneira de alcançar seus objetivos, mas ao longo de toda a nossa vida, fomos ensinados que esses são os melhores meios e que ir por um caminho diferente desse é coisa de louco. mas não é bem assim.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;primeiramente, pense numa criança que não sabe falar.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;como ela aprender a falar sozinha?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;ela não aprende sozinha. ela tem referenciais ao redor dela que estão o tempo todo falando, gesticulando, interagindo com ela e aos poucos ela vai retendo os sons e percebendo que pode também reproduzí-los, mesmo que não sejam sons inteligíveis inicialmente, mas que ainda assim são uma forma de interação. aos poucos esses sons vão tomando forma e, naturalmente, começam a surgir as primeiras palavras. ao longo desse processo, os pais geralmente vão entendendo e criando um método próprio para estimular e fazer essa criança desenvolver melhor essas habilidades. e é nesse exemplo que temos que pensar sempre que pensamos em aprender algo fora dos métodos tradicionais.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;o processo deve ser construído de forma prazeirosa e divertida, nunca dolorosa.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;nenhum pai coloca de castigo uma criança que não aprendeu a falar aos 2 anos de idade. no máximo ele vai procurar ajuda profissional pra entender se há algum problema cognitivo ou mental, mas tudo dentro da ideia de que o processo será único para cada criança.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;vamos entender outro exemplo para captar melhor a essência da ideia.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;é fato que se você viajar para a China e passar 6 meses lá, você aprenderá mais Mandarim do que se passar os mesmos 6 meses estudando em algum curso dessa mesma língua. e isso se dá pelos MOTIVOS que você tem para aprender. num geral, precisar comprar comida num mercado chinês é mais motivador do que ouvir um professor repetindo os números de 1 a 10 ou ensinando as cores, não?&lt;/p&gt;

&lt;h2 id=&quot;percebi-que-odeio-o-sistema-tradicional-de-ensino-o-que-eufaço&quot;&gt;percebi que odeio o sistema tradicional de ensino, o que eu faço?&lt;/h2&gt;

&lt;p&gt;depois de entender que talvez as metodologia que estamos acostumados talvez não sejam as melhores, um questionamento que provavelmente virá à sua cabeça é: e agora, o que eu faço com essa informação? devo acabar com o sistema de ensino e me rebelar contra tudo e todos que forem contra formas alternativas de aprendizado?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;acho que não.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;é muito simples e lógico: já que a metodologia tradicional não é o que mais te agrada, monte a sua própria.&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;mas-como-assim-montar-uma-metodologia-apenas-profissionais-capacitados-são-capazes-disso&quot;&gt;mas como assim montar uma metodologia? apenas profissionais capacitados são capazes disso…&lt;/h3&gt;

&lt;p&gt;neste ponto muitas pessoas travam com a ideia de ser responsável por montar uma estratégia, com a justificativa de que não são capacitadas pra isso, que não vão conseguir ou que se fizerem uma estratégia, esta vai ficar ruim e pouco otimizada. o único argumento que eu tenho pra te convencer uma pessoa com essa linha de raciocínio é: cada um sabe o que gosta e o que não gosta. sabe o que faz bem e o que faz mal para si.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;você é a pessoa que mais sabe do que você precisa&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;você é a pessoa mais indicada para dizer para si mesmo COMO você deve aprender e qual o jeito que mais vai te trazer resultados. e talvez a primeira estratégia que você monte seja realmente ruim, mas você também será a pessoa mais indicada para melhorar ela.&lt;/p&gt;

&lt;p&gt;neste ponto, eu não vou te dar a resposta exata sobre qual a melhor estratégia ou qual a melhor metodologia para você aprender, até porque não sei nem o que exatamente o que você quer aprender nem quais são seus objetivos. tentarei mostrar através de algumas dicas como eu montei e monto as minhas e isso talvez facilite o seu processo.&lt;/p&gt;

&lt;h2 id=&quot;aprendendo-a-pesquisar&quot;&gt;aprendendo a pesquisar&lt;/h2&gt;

&lt;p&gt;parece besteira, mas é incrível a quantidade de pessoas que não sabe pesquisar as coisas na internet. há alguns anos era mais difícil. o google contava com alguns atalhos e jeitos específicos de fazer pesquisas que melhoravam a qualidade dos resultados. mas ao longo dos anos eles perceberam que essa estratégia não era das melhores e resolveram melhorar o algoritmo com base no jeito que as pessoas comuns costumavam pesquisar. hoje em dia, o melhor jeito de usar o google é como se ele fosse seu amigo. se você quer por exemplo, aprender a desenhar, pesquise simplesmente: “aprender a desenhar” ou “como começar a desenhar”.&lt;/p&gt;

&lt;p&gt;essa busca simples e direta não te trará o melhor resultado de cara para você montar sua estratégia, mas sim os resultados mais relevantes nesta área. e a partir dessa primeira pesquisa, você tem um ponto de partida.&lt;/p&gt;

&lt;p&gt;e o que significa ter um ponto de partida?&lt;/p&gt;

&lt;h2 id=&quot;quem-tem-net-vai-aroma&quot;&gt;quem tem net vai a roma…&lt;/h2&gt;
&lt;p&gt;na internet, ter um ponto de partida é como ter passagens infinitas e estar num aeroporto. você pode chegar em qualquer lugar, basta fazer as escalas certas. você pode fazer caminhos mais longos ou mais rápidos, mais baratos, mais caros, mais ou menos bonitos, mas sempre irá conseguir chegar onde você quer. e os aviões nessa metodologia são os links. e se você não sabe exatamente onde quer chegar, comece chegando em algum continente que ache interessante, depois você se preocupa com o país ou a cidade que quer chegar.&lt;/p&gt;

&lt;p&gt;difícilmente uma página na internet é construída apenas de texto puro, sem conter nenhum link. logo, a partir dessa busca inicial, você começa a entrar num universo novo, cada página com vários links e cada links com mais e mais links dentro. e essa é a primeira etapa de uma pesquisa para montar uma metodologia. o objetivo aqui é acumular o máximo de informações possíveis. vou dar um exemplo prático.&lt;/p&gt;

&lt;p&gt;ao se pesquisar sobre como aprender a desenhar, em algum momento você vai chegar em algum artista falando como aprendeu. e isso é muito valioso. entender como pessoas que são referência na área em que você quer adquirir conhecimento. pois elas já passaram pelos passos iniciais e intermediários. elas sabem quais as dificuldades. por isso, sempre que esbarrar em algum profissional da área, preste atençao, guarde seu nome, salve os links e siga sua busca.
referências da área&lt;/p&gt;

&lt;p&gt;ao achar pessoas que são referência na área e que fazem coisas parecidas com as que você quer fazer, tente entender como elas começaram, qual caminho fizeram e qual metodologia utilizam hoje em dia para aprender as coisas. isso pode ser um importante referencial para você montar as suas, já que seus objetivos finais são parecidos com os delas. e não só isso, mas use-as como inspiração também. ver coisas inspiradoras que os outros fazem e saber que há um caminho a se seguir para alcançar resultados parecidos é uma boa fonte de motivação.&lt;/p&gt;

&lt;p&gt;seguindo nosso exemplo de desenho, ao achar artistas renomados, aos poucos você começa a perceber que gosta mais de determinado tipo de traço e começa a buscar mais sobre tal técnica. e quando achar esses nichos, se aprofunde. tente entender as bases para se chegar nos resultados finais que você gosta.&lt;/p&gt;

&lt;p&gt;pesquisar por “artistas que usam nanquim”, “a origem do nanquim”, “nanquim é tóxico?” e demais devaneios também são válidos. o objetivo aqui é ter um arsenal de informações das mais diversas possíveis sobre o assunto, para afunilar o que você realmente quer, gosta e se identifica. você pode por exemplo descobrir que ao invés de desenhar, te agradaria mais aprender a colorir. e assim por diante.&lt;/p&gt;

&lt;p&gt;o objetivo dessa busca inicial é ter um panorama geral do que exatamente é aquilo que você quer aprender e quais os possíveis jeitos de se fazer aquilo, se existem outras pessoas que você pode usar como referência, se existem outras pessoas que fazem exatamente o que você quer fazer, para você quem sabe tirar dúvidas com ela ou mesmo trabalhar junto em algum momento.&lt;/p&gt;

&lt;h2 id=&quot;explore-o-mundo-além-dainternet&quot;&gt;explore o mundo além da internet&lt;/h2&gt;

&lt;p&gt;e neste ponto, não apenas buscas no google são válidas, perguntar para amigos e pessoas que você sabe que tem interesses em áreas parecidas com as suas. buscar em livros na biblioteca, assistir vídeos ou ouvir podcasts. tudo é válido e importante. cada passo aqui contribui para uma das coisas mais importantes do autodidatismo: a imersão no assunto. o ato de se rodear daquilo que você quer aprender para que aquilo aos poucos se torne a coisa mais natural do mundo.&lt;/p&gt;

&lt;p&gt;tenha em mente que esse processo pode não levar apenas alguns minutos. às vezes leva dias. e no meio do processo você pode perceber que na verdade você não quer aprender a desenhar, mas que tem interesse em design de websites. e aí a pesquisa vai começar de novo.&lt;/p&gt;

&lt;p&gt;e agora, com todo esse material em mãos, vamos trabalhar para extrair o máximo que ele pode nos oferecer.&lt;/p&gt;

&lt;h2 id=&quot;montando-sua-metodologia&quot;&gt;montando sua metodologia&lt;/h2&gt;

&lt;p&gt;o primeiro passo é filtrar os links com base na afinidade. aqui o que você tem que ter em mente é o seguinte: lembre-se que quanto mais prazeiroso for o processo de aprendizado, mais estimulado você ficará e por consequência, mais leve serão as horas dedicadas aos estudos. além do fato que o nosso cérebro se sentirá mais confortável e será mais fácil absorver o conteúdo se este for divertido e leve.&lt;/p&gt;

&lt;p&gt;não foque apenas em técnica, procure também conteúdo que gire em torno do seu interesse. em relação a desenhos, canais do youtube onde artistas não necessariamente ensinam, mas mostram seus processos criativos e fazem timelapses de pinturas podem ser interessantes para te colocar no contexto das pessoas que realmente sabem o que estão fazendo.&lt;/p&gt;

&lt;h3 id=&quot;acho-que-busquei-errado-eagora&quot;&gt;acho que busquei errado, e agora?&lt;/h3&gt;

&lt;p&gt;talvez você perceba que sua busca não foi tão efetiva, talvez você tenha achado muitas fontes de inspiração, mas não tem um bom arsenal de conteúdo teórico. isso é normal, mas quanto antes se perceber, melhor. revise o material e encontre as fraquezas dele. só parta para o próximo passo quando sentir que tem em mãos um conteúdo bom e interessante, que desperte seu interesse de alguma forma.
monte suas metas&lt;/p&gt;

&lt;p&gt;a partir do material filtrado, comece a traçar metas. ler 1 livro dentre os selecionados nas próximas semanas. ouvir 4 episódios de um podcast nos próximos dias. ter aprendido técnica Y até o fim do mês. É importante que nesse momento da organização, você tenha uma ideia geral do quanto de trabalho vai precisar ter para chegar onde você quer.&lt;/p&gt;

&lt;p&gt;por exemplo: você em suas pesquisas decidiu que quer aprender a desenhar e em seguida, pintar com nanquim. tendo este cenário em mente, monte uma estratégia onde você desenvolva inicialmente noções básicas de desenho, que vão te ajudar tanto no desenho à lápis quanto na pintura com nanquim. é importante entender que esse processo de montar sua estratégia e metodologia já requer uma certa imersão no assunto, pois você precisa entender minimamente o que é requisito para tarefa X e também saber diferenciar o que é básico do que é avançado. nessa hora ajuda bastante entender como pessoas já estabelecidas na área passaram por esse ponta pé inicial que você está passando agora.&lt;/p&gt;

&lt;p&gt;há também a possibilidade de neste momento você perceber que vai ser muito mais fácil e prazeiroso para você estudar em um curso, numa escola tradicional ou num curso online. e não há um problema com isso, se for uma decisão realmente consciente e não apenas um momento de insegurança ou uma questão de se sentir incapaz. o importante aqui é entender que não é o CURSO X ou o material Y que você não tem que vai realmente fazer de você um expert naquele assunto. cursos e materiais podem ajudar, mas quem vai fazer a real diferença é você. e soa muito mais sensato fazer a diferença inicialmente com o que temos do que esperar o dinheiro para se matricular naquele curso dos sonhos ou até mesmo pra ir naquele workshop. uma coisa não exclui a outra, o importante é você aprender do melhor jeito possível e que te trará mais prazer.&lt;/p&gt;

&lt;h2 id=&quot;sobre-teoriablergggg&quot;&gt;sobre teoria: blergggg&lt;/h2&gt;

&lt;p&gt;um fato: teoria é chata, extremamente chata na maioria das vezes. mas ela é necessária.&lt;/p&gt;

&lt;p&gt;uma dica: mas não espere saber tudo na teoria pra começar a botar em prática o que você aprender (a não ser que você esteja aprendendo fissão nuclear ou a escalar montanhas, talvez seja perigoso colocar em prática antes de saber tudo na teoria). uma das estratégias que eu utilizo é buscar a teoria a medida que sinto necessidade dela para me auxiliar em alguma coisa. assim, posso focar melhor na prática.&lt;/p&gt;

&lt;h3 id=&quot;a-prática-seus-erros-e-frustrações&quot;&gt;a prática: seus erros e frustrações&lt;/h3&gt;

&lt;p&gt;a prática é um dos momentos mais importantes do aprendizado, pois é nela que se tem a felicidade de ver seus desejos se tornando reais. mas é também no momento da prática que temos que ter mais cuidado com o maior inimigo do autodidata: a frustração.&lt;/p&gt;

&lt;p&gt;frustração, na maior parte dos casos, é culpa de uma expectativa mal projetada. mais uma vez enfatizo aqui a importância de se ter uma panorama geral do que se quer aprender, pois isso evita a frustração na maior parte dos casos. se você entende o passo a passo de técnicas de pintura e sobre o básico de desenho, provavelmente não vai achar que na primeira vez em que pegar no pincel, vai sair o desenho mais maravilhoso de todos os tempos.&lt;/p&gt;

&lt;p&gt;isso toca em outra caracteristica importante para os autodidatas: não há motivos para ter medo de errar. o erro tem que começar a ser visto como um aliado. seu inimigo nunca irá apontar onde você tem que melhorar. pelo contrário: seu inimigo se aproveita dos seus pontos fracos. logo, o medo é um dos seus melhores amigos. ele diz quais seus pontos fracos, onde exatamente você precisa melhorar. mas você tem que saber entender quando ele te apontar, do contrário, só vai gerar frustração.
perdeu um desenho por não conseguir fazer a sombra do jeito certo? faça o desenho de novo e tente mais uma vez fazer a sombra do jeito certo. não se apegue ao que você tem no momento. no futuro, tudo que você fez no passado vai parecer brincadeira, soará mal feito. se você gosta de uma ideia de um desenho de 2 anos atrás que você estragou porque esbarrou na tinta, pode ter certeza que se você for fazer hoje, depois de tantas experiências adquiridas, ele ficará muito melhor. aprender algo é sobre olhar pro futuro, não pro presente.&lt;/p&gt;

&lt;h3 id=&quot;quebre-tarefasgrandes&quot;&gt;quebre tarefas grandes&lt;/h3&gt;

&lt;p&gt;ao definir as suas metas, quebre as tarefas grandes em tarefas menores, afinal, é muito mais fácil dedicar um pouco de tempo todo dia, do que tirar um dia para dedicar 7 horas seguidas. além do mais, a partir de um certo momento dessas supostas 7 horas de estudo seguidas, seu cérebro não vai ter o mesmo rendimento que nas primeiras 2 horas, por exemplo. isso nos leva a outro ponto importante numa metodologia boa: a frequência.&lt;/p&gt;

&lt;h3 id=&quot;a-importância-da-frequência&quot;&gt;a importância da frequência&lt;/h3&gt;
&lt;p&gt;se você estuda inglês todo dia, seu cérebro entende que aquilo é mais importante que os encontros da turma do colégio de 2009, que acontece uma vez por ano. o importante aqui não é necessáriamente manter uma frequência necessariamente diária, mas alguma frequência, pra que se possa criar uma rotina ou uma certa organização por trás dos seus estudos. seja uma vez por semana, a cada três dias, terças e quintas ou qualquer que seja, o importante é ter uma frequência e essa frequência estar diretamente relacionada com suas prioridades. (ver apps ou estratégias para manter controle de hábitos: http://www.habitbull.com/ ou semelhantes)&lt;/p&gt;

&lt;h2 id=&quot;mão-namassa&quot;&gt;mão na massa&lt;/h2&gt;

&lt;p&gt;com essas dicas e com o material captado, acredito que você tenha direcionamento suficiente para montar uma estratégia de estudo que seja divertida, leve, disciplinada e alinhada com suas expectativas.
a partir daí, é hora de botar a mão na massa e começar a estudar. um ponto importante nesse momento é não ter medo da folha em branco, que ataca comumente escritores, artistas e pessoas que trabalham com criatividade, que se sentem oprimidos pela ideia de uma folha em branco em sua frente.&lt;/p&gt;

&lt;h3 id=&quot;mas-porque-se-tem-medo-de-uma-folha-em-branco&quot;&gt;mas porque se tem medo de uma folha em branco?&lt;/h3&gt;

&lt;p&gt;a folha em branco representa que um trabalho precisa ser começado. e com o começo, vem todas as dificuldades também. o importante nessa hora é pensar no objetivo final como uma recompensa, afinal, se você começou todo esse processo, é porque tem algum interesse em adquirir esta habilidade, seja desenho, uma nova língua, ou um instrumento. não custa nada antes de começar a primeira lição de violão, imaginar-se tocando as músicas que mais gosta, compondo as suas próprias e pensar no sentimento que aquilo te tratá.&lt;/p&gt;

&lt;h2 id=&quot;fixando-oconteúdo&quot;&gt;fixando o conteúdo&lt;/h2&gt;

&lt;p&gt;aqui é a segunda parte do seu método. achar um jeito de revisar e organizar na sua cabeça tudo que você aprender. vou dar algumas dicas de como faço pra você pensar no melhor jeito de fazer.&lt;/p&gt;

&lt;h3 id=&quot;ensinar-paraaprender&quot;&gt;ensinar para aprender&lt;/h3&gt;

&lt;p&gt;acredito que ensinar seja um dos melhores jeitos de fixar aprendizado. eu, pro exemplo, falo sobre tudo que to aprendendo com todo mundo que for possível. tento inserir o assunto na conversa sempre que conveniente ou até falo pra mim mesmo. isso porque eu percebi que quando explico alguma coisa que aprendi, essa coisa se organiza muito melhor na minha cabeça.&lt;/p&gt;

&lt;p&gt;se você não tem ninguém para conversar sobre, não quer ser chato ou tem o sentimento que está incomodando as pessoas falando sobre como é legal serrar blocos de madeira pra construir uma estante, há outras alternativas também. quando estou andando na rua, por exemplo, sempre fico tentando descrever as coisas que vejo na língua que estou aprendendo no momento, como uma forma de fixar o conteúdo que consumi em casa.&lt;/p&gt;

&lt;p&gt;criar um material para ensinar outras pessoas pode ser uma boa saída também. manter um diário de aprendizado, principalmente pelo fator histórico. é bom olhar pras anotações do passado e ver como foi o progresso. aliás, qualquer coisa que ajude a analisar seu progresso é importante tanto para te motivar quanto para ter noção do quão perto ou longe se está do objetivo final e analizar se seu planejamento foi eficiente.&lt;/p&gt;

&lt;h2 id=&quot;por-fim-algumas-considerações&quot;&gt;por fim, algumas considerações&lt;/h2&gt;

&lt;p&gt;o aprendizado é sempre contínuo. se você aprendeu tudo que tinha pra aprender, pode ter certeza que tem alguém criando algo em algum lugar do mundo em suas areas de aprendizado. e se não tiver alguém fazendo algo, provavelmente você é ou pode ser essa pessoa. e pra fazer algo novo, você provavelmente precisará estudar também. o importante é entender que quando se chega num objetivo, pode-se criar outro e assim sucessivamente. aprendizado só para quando você quiser.&lt;/p&gt;

&lt;p&gt;e se no meio desse processo todo você se sentir incapaz ou achar que não vai chegar no seu objetivo, lembre-se que você já foi um bebê e aprendeu a andar sem ninguém te ensinar. lembre-se que seu processo de aprendizagem de fala, de entendimento de mundo, o desenvolvimento do seu senso de humor ou do jeito que você se relaciona com as pessoas que gosta, tudo isso você fez de maneira autodidata. você só não tinha consciência disso.&lt;/p&gt;
</description>
        <pubDate>Wed, 01 Apr 2020 00:00:00 -0300</pubDate>
        <link>http://localhost:4000/2020/04/01/UX-notas-sobre-autodidatismo.html</link>
        <guid isPermaLink="true">http://localhost:4000/2020/04/01/UX-notas-sobre-autodidatismo.html</guid>
        
        <category>aprendizado,</category>
        
        <category>autodidatismo</category>
        
        
      </item>
    
      <item>
        <title>UX Developer - Introdução</title>
        <description>&lt;div class=&quot;post-img-container&quot;&gt;
	&lt;img class=&quot;post-img&quot; src=&quot;https://cdn-images-1.medium.com/max/2000/1*b96gCpk44BOWtaHsra5f6w.png&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;Faz algum tempo que, por todos os lados no universo de desenvolvimento, startups, empreendedorismo e design, somos bombardeados pelo termo User Experience. E na maioria das vezes, o tema é tratado como algo salvador de pátrias, messianicamente apregoado e que todos os nossos problemas com clientes podem ser resolvidos se utilizarmos bem suas metodologias e conceitos. Bom, todo exagero é duvidoso, mas não seria inverdade dizer que o potencial solucionador do UX Design é real e pode ser aplicado de variadas formas em diversos projetos.&lt;/p&gt;

&lt;p&gt;O ponto que às vezes deixa a desejar é que, na prática, é um pouco complicado para iniciantes entender como esse potencial solucionador pode ser aplicado em casos reais. Para designers é relativamente simples, pois UX não é nada mais nada menos que uma das áreas do universo do design. O desafio fazer o caminho inverso: ir do Frontend à UX.&lt;/p&gt;

&lt;p&gt;E aí, como é de praxe, o sujeito — estereótipo de desenvolvedor frontend — começa a procurar sobre o tema na web e descobre que é um pouco mais complexo do que ele achava que é. Os planos de ler alguns artigos e sair aplicando o que entendeu vão por água abaixo e ele se depara com o seguinte dilema: estudar a fundo o tema ou esquecer dele e continuar fazendo os projetos dependendo da preocupação do designer com tais questões de experiência (isso caso trabalhe em conjunto com um designer).&lt;/p&gt;

&lt;p&gt;Eu me deparei com o mesmo dilema e acabei por tentar estudar o tema mais a fundo. Algumas coisas estão bem claras agora, mas quanto mais leio, mais entendo que UX é um universo imenso e que junto com o universo gigante do frontend, acaba sendo loucura (e eu quase piro com isso) querer entender com profundidade os dois lados tão depressa.&lt;/p&gt;

&lt;p&gt;Decidi escrever uma série de posts para ajudar outros devs a não enlouquecerem. Este é o primeiro e vai te dar algumas ideias generalistas sobre alguns pontos interessantes a se pensar antes de começar a entender de verdade sobre UX design e aplicá-lo nos seus projetos.&lt;/p&gt;

&lt;h2 id=&quot;design-para-a-resolução-de-problemas&quot;&gt;Design para a resolução de problemas&lt;/h2&gt;
&lt;p&gt;Em geral, a mente de desenvolvedores é condicionada a dividir o desenvolvimento frontend em duas partes: funcional e estética. E em ambientes de produção, geralmente se divide as tarefas: o designer se preocupa com a parte estética e o desenvolvedor frontend se preocupa em transformar a parte estética criada pelo designer em algo funcional, semântico e performático.&lt;/p&gt;

&lt;p&gt;O que se esquece muitas vezes é que tanto a parte estética quanto a funcional estão englobadas por um aspecto: o usuário. E o UX design vem à tona justamente para aglutinar tudo e fazer com que o produto cumpra suas funções.&lt;/p&gt;

&lt;p&gt;E a função do design é justamente essa. “Procurar a melhor forma de resolver problemas”. E no caso do UX Design, a preocupação é resolver o problema conciliando a interação do usuário com a solução desse problema.&lt;/p&gt;

&lt;p&gt;Pensar que design serve apenas para deixar as coisas esteticamente agradáveis é uma falha que deveria estar morta há um bom tempo. A estética, que chamamos de design gráfico ou design visual, é apenas uma das disciplinas do design.&lt;/p&gt;

&lt;p&gt;Nós, como desenvolvedores, temos que entender esse conceito e tentar pensar como solucionadores de problemas (UXers). E nem sempre os problemas são resolvidos com código, mas também com algumas decisões sobre layout, questões de performance, escolha de tecnologias de cada projeto e até mesmo com a forma que você escreve seu código.&lt;/p&gt;

&lt;h2 id=&quot;componentes-reutilizáveis&quot;&gt;Componentes reutilizáveis&lt;/h2&gt;
&lt;p&gt;E por falar na forma como você escreve seu código, vamos falar de uma boa prática e envolver UX nela? Vamos.&lt;/p&gt;

&lt;p&gt;O conceito por muitas vezes exageradamente repetido de reaproveitamento de código é de extrema importância para o desenvolvimento de projetos, sejam grandes ou pequenos.
 Reaproveitamento de código implica uma melhor performance, uma melhor manutenção e melhor legibilidade em seu código.&lt;/p&gt;

&lt;p&gt;E no nosso universo do frontend, o conceito de reaproveitamento de código aparece de diversas formas, seja na utilização de classes no CSS, seja na componentização das páginas ou mesmo no uso de metodologias como RSCSS.&lt;/p&gt;

&lt;p&gt;Tá okay. Reaproveitamento de código é bem importante para programação, seja no front ou no backend, mas onde é que o UX Design entra?
Criar uma interface homogênea e harmônica é um dos intuitos das metodologias que UXers utilizam nos dias de hoje, porque
Comunicabilidade e affordance são conceitos essenciais para que a experiência do usuário seja satisfatoriamente interessante.&lt;/p&gt;

&lt;p&gt;Uma das formas de conseguir alcançar comunicabilidade e affordance é por meio de uma linguagem concisa e fácil de entender.
 Juntamente às estratégias de conteúdo, a linguagem da interface é o conjunto de elementos que passarão as mensagens específicas ao usuário.
Agora se pergunte: qual a melhor forma de homogeneizar os componentes para que eles consigam chegar nesses requisitos? Resposta: Reutilizando estilos, comportamentos e padrões. Caso você trabalhe em conjunto com um designer, é bom conversar com ele sobre style guides e entender como trabalhar com esses guias influencia o trabalho de cada uma das partes e como também o produto disso vai impactar a experiência do usuário.&lt;/p&gt;

&lt;h2 id=&quot;entendendo-o-seu-usuário-real&quot;&gt;Entendendo o seu usuário real&lt;/h2&gt;
&lt;p&gt;Aliás, compreender como o produto de seu trabalho atinge o seu usuário real é uma parte importantíssima do seu papel. Muitas vezes nosso ambiente de trabalho e até nosso próprio mindset nos condiciona a focar nas sprints e nas entregas e esquecer que o que estamos produzindo vai ser usado por pessoas, serumaninhos com sentimentos e diferentes pensamentos e formas de agir.&lt;/p&gt;

&lt;p&gt;Entender isso é importante porque nos faz melhorar não só a forma como desenvolvemos nosso trabalho na prática, mas também em como pensamos ele de forma teórica.&lt;/p&gt;

&lt;p&gt;O que eu estou falando é: o projeto não termina quando sua interface vai ao ar.
 Entender o usuário real é a parte mais importante do processo e existem várias formas de fazer isso. A mais simples é usando ferramentas de pageview, como Google Analytics ou semelhantes. As técnicas para recolher feedback dos usuários são diversas, mas o mais importante é saber que é a partir desse feedback que seu trabalho vai ser validado ou não. E por consequência, melhorado.&lt;/p&gt;

&lt;p&gt;Vendo do ponto de vista mais teórico, a análise de comportamento de usuário vem nos dar aporte para entender, na prática, a diferença entre modelo conceitual e mental, o qual muitas vezes é desprezado, mas que tem indiscutível relevância. É o fechamento do ciclo.&lt;/p&gt;

&lt;h2 id=&quot;concluindo&quot;&gt;Concluindo…&lt;/h2&gt;

&lt;p&gt;E ao contrário do ciclo que se fechou no último parágrafo, minha conclusão vem pra deixar em aberto um ciclo.&lt;/p&gt;

&lt;p&gt;Este artigo teve como objetivo introduzir algumas relações diretas entre UX Design e algumas ferramentas e boas práticas do universo do desenvolvimento Frontend. Esse é o primeiro post de uma sequência que tratará das interseções e trocas de amor entre Frontend e UX, visto a escassez de conteúdos que tratem diretamente destes assuntos, de forma a facilitar as coisas para os dois lados envolvidos.&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Sep 2016 00:00:00 -0300</pubDate>
        <link>http://localhost:4000/2016/09/01/UX-para-frontenders-i.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/09/01/UX-para-frontenders-i.html</guid>
        
        <category>uxdesign</category>
        
        
      </item>
    
      <item>
        <title>Design para devs #1 - Introdução</title>
        <description>&lt;p&gt;Mais um post da série design para desenvolvedores.
&lt;!--bora--&gt;&lt;/p&gt;
&lt;div class=&quot;post-img-container&quot;&gt;
	&lt;img class=&quot;post-img&quot; src=&quot;http://www.preissdesign.com.br/wp-content/uploads/2016/06/graphic-design-tools-Feature_1290x688_MS.jpg&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Essa série de posts tem como propósito facilitar o entendimento de alguns conceitos de design para os desenvolvedores frontend. Neste primeiro, daremos apenas um introdução generalista e simplista.&lt;/p&gt;

&lt;p&gt;Não sou o melhor designer do mundo e estou longe de ser bom, mas nos últimos tempos tenho dedicado boa parte do meu tempo livre a entender como melhorar visualmente minhas criações. Em geral, trabalho apenas com implementação, mas sempre me interessei em entender como são pensadas as interfaces e porque são do jeito que são. Acabei por perceber que existe muita exatidão por trás da criatividade.&lt;/p&gt;

&lt;p&gt;É comum de todo desenvolvedor frontend começar a querer desenvolver seus próprios projetos, seja pra treinar suas habilidades ou pra colocar pra frente ideias reais. Mas sempre surge o dilema: criar do zero interfaces não requer apenas codificação, é preciso também ser um bom designer. No mínimo, não usar Comic Sans. Eu segui esse caminho (frontend-&amp;gt;design) e aprendi algumas coisas. Inicialmente, percebi que uma coisa muito clara: é muito mais fácil virar frontender sendo designer do que fazer o caminho inverso. A área de design requer muito mais apuração de senso crítico para um resultado minimamente interessante. Minha experiência tem sido interessante e rendido bons frutos. Aqui vão algumas dicas introdutórias sobre o que aprendi.&lt;/p&gt;

&lt;h2 id=&quot;entenda-o-que-é-design&quot;&gt;Entenda o que é Design.&lt;/h2&gt;

&lt;p&gt;“Design é beleza”. Não, não é. E isso no começo é difícil de entender. Implementar um interface bonita é importante sim, mas se a beleza não for útil, ela pode ser descartada. O papel do design não é tornar as coisas simplemente bonitas, mas torná-las funcionais. A beleza é a consequência e não a causa. Desenvolva sempre suas ideias com base em seu conteúdo, adaptar o conteúdo para ele “caber” no design é um caminho que quase sempre gera resultados ruins.&lt;/p&gt;

&lt;h2 id=&quot;conceitos-básicos-cores-e-tipografia&quot;&gt;Conceitos básicos: cores e tipografia.&lt;/h2&gt;

&lt;p&gt;Esses são conceitos básicos que se tem que estudar antes de qualquer coisa: as cores e a tipografia constituem quase que 100% de um design na web.&lt;/p&gt;

&lt;p&gt;Entender sobre &lt;a href=&quot;http://www.teoriadascores.com.br/&quot;&gt;Teoria das Cores&lt;/a&gt;, &lt;a href=&quot;http://www.teoriadascores.com.br/discos-cromaticos.php&quot;&gt;discos cromáticos&lt;/a&gt; e suas utilidades para a web é de suma importância para desenvolvimento de uma percepção visual mais lúcida. Criação de paletas de cores e entendimento de seus significados é essencial também. &lt;a href=&quot;https://www.smashingmagazine.com/2016/04/web-developer-guide-color/&quot;&gt;Este guia&lt;/a&gt; é uma mão na roda pra quem não tem ideia de nada.&lt;/p&gt;

&lt;p&gt;Como André Rafael, do Origamid, diz: tipografia é 95% da web, entendê-la e fazer bom uso de seus conceitos significa ter domínio sobre boa parte do seu conteúdo. Conhecer as famílias tipográficas, seus usos mais comuns e recomendados, saber quando usar bolds, italics e underlines e também entender sobre seus tamanhos e kernings. &lt;a href=&quot;http://design.codeschool.com/levels/1&quot;&gt;Este curso&lt;/a&gt; possui o primeiro módulo free e é muito esclarecedor para iniciantes.&lt;/p&gt;

&lt;h2 id=&quot;pense-no-design-de-tudo&quot;&gt;Pense no design de tudo&lt;/h2&gt;

&lt;p&gt;Criar interfaces, componentes ou mesmo temas pra wordpress não requerem apenas habilidades específicas de webdesign, mas sim habilidades genéricas de design gráfico, experiência de usuário e às vezes até de design de produto, portanto, pensar no design de tudo é um exercício muito bom para aprimorar as skills.&lt;/p&gt;

&lt;p&gt;E quando eu digo tudo, não é apenas tudo referente ao seu projeto em si, mas sobre a vida e as coisas que te cercam. Comece a pensar na forma em que você organiza sua comida no prato quando almoça, na forma que veste suas calças ao sair de manhã, na forma como digita suas frases num texto e obviamente, como essas frases ficarão dispostas no seu blog. Pensar no design de tudo é um exercício simples de ser feito e que abre os horizontes de formas inimagináveis, pois se você conseguir entender qual a melhor forma de de dobrar sua calça ou de organizar sua comida no prato, organizar os posts do seu layout de blog se tornará mais simples.&lt;/p&gt;

&lt;h2 id=&quot;tenha-boas-referências-na-manga---inclusive-dos-frameworks&quot;&gt;Tenha boas referências na manga - inclusive dos frameworks&lt;/h2&gt;

&lt;p&gt;Usar um framework não é pecado, mas saber quando não usar um é uma dádiva dos deuses. Frameworks de CSS geralmente funcionam assim: eles te dão helpers, grids e em alguns casos, mixins e extends para facilitar sua vida. Também te dão componentes prontos, onde você só precisa adicionar as classes nas suas tags e pronto: a mágica acontece. O que não se entende no começo é que os frameworks acabam por gerar um &lt;a href=&quot;https://en.wikipedia.org/wiki/Style_guide&quot;&gt;styleguide&lt;/a&gt; padrão para o desenvolvedor. E nem sempre é bom. Frameworks como o &lt;a href=&quot;https://milligram.github.io/&quot;&gt;Miligram&lt;/a&gt; ou o &lt;a href=&quot;http://semantic-ui.com/&quot;&gt;Semantic UI&lt;/a&gt;, são exemplos de ferramentas que se preocupam mais com as funcionalidades e semântica do que com oferecer estilos definitivos prontos.&lt;/p&gt;

&lt;p&gt;Frameworks como Bootstrap ou Foundatoin são interessantes para desenvolvimento ágil, mas sua personalização é essencial. Recomendo usá-los como referência e não como ferramenta principal. Como sempre digo, o mais indicado é criar um framework para cada projeto, com styleguide próprio e se possível, com uso do &lt;a href=&quot;http://tableless.com.br/o-que-e-design-atomic/&quot;&gt;atomic design&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;No geral, além dos frameworks, o &lt;a href=&quot;http://codepen.io/&quot;&gt;CodePen&lt;/a&gt; e o &lt;a href=&quot;http://www.awwwards.com/&quot;&gt;Awwwards&lt;/a&gt; são boas referências para se ter na manga no quesito de webdesign. Outras referências que pode ser interessante ter é de outra área que seja correlata ao design, por exemplo: fotografia ou moda. Mas aí vai do seu gosto.&lt;/p&gt;

&lt;p&gt;Este texto tem como objetivo introduzir desenvolvedores à alguns conceitos de design, nos próximos textos da série, explorarei aspectos mais práticos e mais específicos. Até lá!&lt;/p&gt;
</description>
        <pubDate>Tue, 26 Jul 2016 00:00:00 -0300</pubDate>
        <link>http://localhost:4000/2016/07/26/design-para-devs-1-introducao.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/07/26/design-para-devs-1-introducao.html</guid>
        
        <category>frontend</category>
        
        
      </item>
    
      <item>
        <title>A internet das coisas e seus desafios para a UX</title>
        <description>&lt;p&gt;UX não é só pra interfaces e interfaces não são apenas web.&lt;/p&gt;

&lt;!--bora--&gt;
&lt;div class=&quot;post-img-container&quot;&gt;
	&lt;img class=&quot;post-img&quot; src=&quot;https://cdn-images-1.medium.com/max/2000/1*AJn83gYW2PesqrfFQpkcnA.jpeg&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;No universo da Tecnologia da Informação existe uma lei que começou como uma profecia de um presidente da Intel, Gordon Moore, e acabou virando uma regra levada bastante em consideração quando se fala de evolução tecnológica nas últimas décadas. Chama-se Lei de Moore e ela diz que a cada 18 meses, o mercado de hardware produziria CPUs com o dobro de velocidade e pela metade do preço. Talvez isso não seja matematicamente verdade, se formos colocar na ponta do lápis, mas o que interessa é que essa lei nos dá aporte para entendermos qual a proporção de crescimento que a tecnologia tem como base.&lt;/p&gt;

&lt;p&gt;O interessante de verdade não é exatamente a evolução do hardware em si, mas sim as revoluções tecnológicas que surgem através do aumento da capacidade de processamento, diminuição do tamanho dos componentes, portabilidade e acessibilidade destes. Como exemplo disso temos o surgimentos de placas de prototipação como o Arduino e seus colegas de turma, temos computadores portáteis como Raspberry Pi a preço de banana.&lt;/p&gt;

&lt;p&gt;Na última década, o maior impacto que a evolução prevista por Moore causou foi a chegada do mercado mobile com força total. Hoje em dia todos nós temos Smartphones em mãos, e sob a perspectiva da UX, podemos ver uma disruptura no cenário de interação de usuário, que passou a ser mais intimista, mas rápido, fluido e intuitivo. Mas esses benefícios custaram caro, podemos perceber ainda hoje, um cenário de discussões bastante quentes sobre tópicos de usabilidade mobile, performance e como todos esses aspectos influenciam na visão que o usuário cria sobre o produto.
Ou seja, sempre que um espaço novo aparece no campo tecnológico, também aparece muito espaço para estudo sobre questões de experiência do usuário. A divisão de água que os smartphones causaram foi a de trazer pra próximo a internet, deixá-la mais fluida. Mas a evolução tecnológica não parou por aí e o próximo passo já está sendo dado.&lt;/p&gt;

&lt;h2 id=&quot;a-internet-das-coisas&quot;&gt;A Internet das Coisas&lt;/h2&gt;

&lt;p&gt;Você já deve ter ouvido falar desse termo, não? Se não, aqui vai uma pequena sinopse:
Quando a tecnologia dos mobiles apareceu, trouxe junto consigo a ideia de que a internet não está presa aos computadores, mas ainda assim, se pararmos para pensar nas formas que nos conectamos, ainda é muito limitada, pois temos inúmeras coisas no nosso cotidiano que ainda trabalham de forma offline e que poderiam ser colocadas “on the line”.&lt;/p&gt;

&lt;p&gt;A Internet das Coisas ou IoT (do inglês Internet of Things), surge como uma das revoluções abarcadas pela alta capacidade de hardware que temos hoje em dia a custos relativamente baixos — apesar de não ser a custo de mercado viável para a maioria da população, só o fato de não ser algo digno de ficção científica já faz disso algo mais próximo da realidade. Esse conceito nos trás a possibilidade de conectar os dispositivos do nosso cotidiano à internet, dando assim diversas novas funcionalidades para aparelhos que já são nossos conhecidos.&lt;/p&gt;

&lt;p&gt;Esse novo modo de ver as coisas veio para tirar a ideia de que a internet e a tecnologia está fadada a avançar para construir gadgets como smartphones, smartwatches e companhia. Parece ser muito mais abrangente e interessante, para solucionar problemas, criar formas de conectar as coisas do nosso cotidiano à internet e abrir margem para novas soluções instigantes tanto do ponto de vista do design quanto do ponto de vista tecnológico e visionário.&lt;/p&gt;

&lt;p&gt;Mas com esse novo ecossistema sendo criado, não apenas soluções inovadoras aparecerão, como também problemas cabeludos, já que é algo que não foi testado em diversos aspectos.&lt;/p&gt;

&lt;p&gt;Podemos comparar isso com o advento dos computadores em escritórios na década passada. Apesar de arquivos digitais serem uma realidade hoje em dia, ainda podemos ver diversas instituições que ainda usam arquivos físicos, pastas físicas e possuem setor de protocolo. Demorou um tempo pra se tornar costume criar arquivos diretamente no computador, se adaptar à organização das pastas não-físicas, entender como funcionavam backups e porque eles eram tão importantes, entender qual a diferença entre extensões .pdf e .doc e mais mil outros problemas que surgiram por motivos de: era um ecossistema novo.&lt;/p&gt;

&lt;p&gt;Podemos dizer que todo divisor de águas trás consigo um grande caminho de terra para se atravessar. E a Internet das coisas também.&lt;/p&gt;

&lt;p&gt;Do ponto de vista do UX Design, as portas que a Internet das Coisas nos abre são imensas. Inicialmente, podemos levar em consideração que o conceito de design, no geral, remete à resolução de problemas. No panorama que essa revolução da Internet das Coisas abre, temos diantes de nós diversas novas ferramentas úteis para chegarmos a soluções cada vez mais funcionais.&lt;/p&gt;

&lt;p&gt;Um problema que pode ser encontrado aqui é o seguinte: qualquer coisa que surgir como novidade na área de IoT será novidade pro usuário final. O papel do UX Designer não é só pensar numa experiência interessante para o usuário final, mas pensar também que a transição entre as tecnologias antigas e as novas tem que acontecer de forma intuitiva e “suave” para o usuário. Qualquer impacto brusco pode causar frustração ou aversão. Então nos deparamos com um dilema: pensar em soluções que sejam simples, que se comuniquem com o usuário que está acostumado com outros níveis de interação mas que ainda assim se utilizem de todo o aparato que a IoT nos oferece.&lt;/p&gt;

&lt;h2 id=&quot;na-prática&quot;&gt;Na prática&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=joeyLbIxvKo&quot;&gt;Aqui&lt;/a&gt; temos um vídeo de um exemplo prático de tecnologia implementada pela IoT. A ideia é simples: dar poderes à mais a um produto que é de uso comum nosso, o controle remoto. Um ponto que deve ser levado em consideração é a configuração do dispositivo, quando se pensa em UX. No caso, quanto mais out-of-the-box (pronto pra uso sem nenhuma configuração), melhor.&lt;/p&gt;

&lt;p&gt;No caso desse controle remoto, podemos observar que apesar de ter que ser feito manualmente, o processo de configuração é simples e intuitivo, sendo feito com base em perguntas objetivas e diretas. Após a configuração, o uso dele é simples também: desbloqueio e escolha do aparelho que se quer controlar, já que é um controle universal. Do ponto de vista do usuário, a experiência pode ser traduzida em apenas uma pergunta: “Esse dispositivo deixa minha experiência de controle remotos mais simples ou é apenas um aparato que vai me atrapalhar mais do que ajudar?”&lt;/p&gt;

&lt;p&gt;Talvez você pense que qualquer coisa que envolva o ecossistema das IoTs será infinitamente mais rápida, prática e intuitiva do que uma mesma solução puramente mecânica, mas não é bem assim. Nosso próximo exemplo trata bem disso.
Começar um projeto pela interface pode ser extremamente perigoso&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/ux-user-experience-design-em-portugues/come%C3%A7ar-um-projeto-pela-interface-pode-ser-extremamente-perigoso-64ece1e6f696&quot;&gt;Este artigo&lt;/a&gt;  fala especificamente de um produto, a fechadura Lockitron, que se vende como uma fechadura inteligente para portas residenciais. Resumindo o artigo, a primeira versão da Lockitron funcionava em conjunto com um aplicativo para smartphone, ou seja: sempre que o usuário chegava em casa, tinha que pegar o smartphone, desbloquear, procurar o aplicativo dentre todos os que estavam instalados no smartphone, esperar ele carregar e só então poder abrir a fechadura. E no fim das contas, o processo de pegar a chave no bolso e abrir a porta acabava sendo muito mais fácil do que usar a fechadura inteligente. Era um esforço muito menor para um retorno igual.&lt;/p&gt;

&lt;p&gt;Logo, foi preciso pensar em uma reformulação para que o produto fizesse sentido em existir, já que o objetivo dele era cumprir a função de abrir a porta de forma mais simples e descomplicada do que com uma chave. Então, após estudos, foi desenvolvida uma nova versão do produto, essa agora funcionando com sincronização via bluetooth: a porta era destravada sempre que o usuário se aproximava dela.&lt;/p&gt;

&lt;p&gt;Assim, o processo se tornou mais intuitivo que o de abrir a porta com a chave, logo, a solução passou a ser eficaz.&lt;/p&gt;

&lt;h2 id=&quot;ligando-os-pontos&quot;&gt;Ligando os pontos&lt;/h2&gt;

&lt;p&gt;A Internet das Coisas dá voz a uma nova revolução que vai expandir os horizontes do UX Design, tirando a internet do escopo desktop-mobile e trazendo-a para um novo modo de trabalho, onde tudo vai estar conectado de forma a nos propiciar experiências mais simples, cômodas e intuitivas.&lt;/p&gt;

&lt;p&gt;Esse novo panorama de criação de soluções abre margem para muitos erros também, já que não temos noção do que é ou não interessante a se fazer, visto que esse ecossistema ainda não foi testado o suficiente para serem gerados padrões de usabilidade e interação.
Mas isso não quer dizer que não seja um risco bom a se correr, testar novos modos de interação para criar novas experiências de usuário. As ferramentas estão aí pra serem usadas, só se deve tomar cuidado para entender qual a melhor maneira de fazer isso, buscando sempre resolver o problema da melhor maneira e nunca dificultar sua resolução, pois esse é o papel do design no mundo.&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Jul 2016 00:00:00 -0300</pubDate>
        <link>http://localhost:4000/2016/07/03/a-internet-das-coisas-e-seus-desafios-para-a-UX.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/07/03/a-internet-das-coisas-e-seus-desafios-para-a-UX.html</guid>
        
        <category>uxdesign</category>
        
        
      </item>
    
      <item>
        <title>LESS: uma boa escolha para iniciantes</title>
        <description>&lt;p&gt;Porque menos é mais.
&lt;!--bora--&gt;&lt;/p&gt;

&lt;div class=&quot;post-img-container&quot;&gt;
	&lt;img class=&quot;post-img&quot; src=&quot;https://upload.wikimedia.org/wikipedia/commons/8/81/LESS_Logo.svg&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;“Menos é mais”&lt;/p&gt;

&lt;p&gt;Essa é uma frase bastante usada em diversas áreas, prega a ideia de que a economia de recursos é algo beneficente para o produto final. É usado na área do design, por exemplo, para cortar recursos visuais usados desnecessariamente que no fim das contas apenas prejudicam a experiência do usuário. Acredito que com o preprocessadores não é diferente e é por isso que eu uso e defendo o LESS.&lt;/p&gt;

&lt;h2 id=&quot;o-que-é-um-preprocessador-de-css&quot;&gt;O que é um preprocessador de CSS?&lt;/h2&gt;

&lt;p&gt;Um preprocessador funciona como uma extensão do CSS comum que temos hoje em sua versão 3. O preprocessador é uma espécie de “compilador” que gera código CSS de acordo com um código escrito por nós em uma linguagem que possui diversas funcionalidades a mais que o próprio CSS. No fim das contas, há gente que defenda o uso do CSS puro, mas em projetos grandes, o uso de preprocessadores torna-se uma mão na roda. Vejam mais nesse artigo sobre o &lt;a href=&quot;http://markdotto.com/2014/07/23/githubs-css/&quot;&gt;CSS do Github&lt;/a&gt; e sobre o CSS do &lt;a href=&quot;http://ianfeather.co.uk/css-at-lonely-planet/&quot;&gt;Lonely Planet&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Temos alguns preprocessadores disponíveis para conhecermos e usarmos da forma que acharmos melhor. Costumo dizer que é só questão de gosto a escolha de um deles, mas ao longo do tempo, percebi no LESS algumas características que o fazem ser bastante interessante como primeiro contato de um Frontender Junior no universo dos preprocessadores. Vamos falar um pouco sobre os motivos disso.&lt;/p&gt;

&lt;h2 id=&quot;porque-eu-uso-less&quot;&gt;Porque eu uso LESS&lt;/h2&gt;

&lt;p&gt;Quando quis começar a usar preprocessadores, pesquisei bastante e me dei conta que no geral, preprocessadores eram todos iguais e que a minha escolha não iria fazer tanta diferença assim, então escolhi o LESS porque achei a &lt;strong&gt;documentação dele bem mais sucinta e objetiva&lt;/strong&gt; que a do Stylus e do SASS, outros dois preprocessadores em questão na época. Então parti na jornada e passei a usar o LESS em projetos menores para ir me adaptando, pois supostamente era um jeito novo de fazer as coisas. Mas para a minha surpresa, a curva de aprendizado foi bem curta. Apenas precisei entender quando era bom ou não usar tal funcionalidade.&lt;/p&gt;

&lt;p&gt;Em menos de dois projetos eu já estava escrevendo na sintaxe do LESS com a mesma produtividade que escrevia CSS. Mas isso só foi assim por causa da sintaxe do LESS ser como é.&lt;/p&gt;

&lt;h2 id=&quot;sintaxe&quot;&gt;Sintaxe&lt;/h2&gt;

&lt;p&gt;O LESS não te faz criar novos costumes quanto à sintaxe e ele só possui uma sintaxe. Muitos podem defender o Stylus e a sintaxe SCSS por ela agilizar o processo sem ter que escrever as chaves, os dois pontos ou os ponto e vírgulas. Mas o ponto que ponho aqui é: haverão casos onde não será possível ou interessante o uso de preprocessadores e você não poderá controlar isso sempre. Então, vez ou outra você vai ser obrigado a escrever CSS puro. E quando isso acontecer, quanto mais próxima for a sintaxe que você usa no seu preprocessador da sintaxe original do CSS puro, mais fácil e produtivo vai ser você escrever código sem preprocessador.&lt;/p&gt;

&lt;p&gt;No começo do projeto do SASS, a sintaxe era muito diferente de CSS puro. A sintaxe que hoje é conhecida pelo próprio nome SASS, é identada, sem a presença de dois pontos, ponto e vírgula ou chaves. O LESS surgiu logo depois como opção para quem queria algo mais próximo do CSS. Com o surgimento do LESS, o time do SASS percebeu o quão louco era o fato de eles terem alterado a sintaxe do CSS em seu preprocessador, que eles criaram uma nova sintaxe, a SCSS, que permite você escrever código mais próximo da sintaxe original do CSS e ainda assim ter as funcionalidades do preprocessador.&lt;/p&gt;

&lt;p&gt;O único argumento a favor de uma sintaxe identada como a SASS ou a do Stylus é o fator produtividade. Supostamente, você se torna mais produtivo se não escrever ponto e vírgulas, chaves e dois ponto, mas isso vai por água a baixo com o artifício dos snippets e atalhos dos editores de texto. Eu por exemplo nem escrevo as palavras completas dos atributos. Quando quero adicionar um &lt;code&gt;padding&lt;/code&gt;, digito &lt;code&gt;pa&lt;/code&gt; e o snippet já completa, quanto mais em relação à pontos chaves e outros símbolos sintáticos…&lt;/p&gt;

&lt;h2 id=&quot;less-usa-javascript&quot;&gt;LESS usa JavaScript&lt;/h2&gt;

&lt;p&gt;O Stylus também usa. Mas porque isso pode ser bom pra iniciantes? Porque JavaScript é algo praticamente obrigatório para qualquer um que queira mexer com web, ruby apesar de ser uma ótima linguagem em diversos aspectos, não é tão próxima assim dos iniciantes. O SASS usa a linguagem ruby e seu gerenciador de pacotes como padrão. Não questiono aqui a qualidade da linguagem ou seu gerenciador de pacotes, mas é inegável que hoje em dia, há muito mais frameworks e ferramentas para frontenders usando o &lt;code&gt;npm&lt;/code&gt; como gerenciador de pacotes. Isso ajuda a organizar melhor e nos faz não entrar num ecossistema novo apenas para usar um preprocessador.&lt;/p&gt;

&lt;p&gt;Eu sei que há pacotes do SASS para &lt;code&gt;npm&lt;/code&gt; também e para diversos outros gerenciadores de pacotes, mas na documentação oficial é recomendado o uso do GEM para instalar o SASS e acredito que o suporte oficial também é priorizado para a versão do GEM.&lt;/p&gt;

&lt;h2 id=&quot;uso-do-lado-do-cliente&quot;&gt;Uso do lado do cliente&lt;/h2&gt;

&lt;p&gt;Iniciantes em computação têm medo de CLIs. Isso é um fato inegável. E no universo frontend não é diferente. Usar um terminal pode ser um saco para iniciantes, esquecer uma opção ou um parâmetro pode gerar um resultado não esperado e frustrá-lo muito facilmente, portanto, CLIs nem sempre são boas opções para um começo.&lt;/p&gt;

&lt;p&gt;Esse medo, é claro, tem que ser perdido o mais rápido possível. Automatizadores de tarefas como Gulp e Grunt (ou outros), git e diversas outras ferramentas que usam CLIs são essenciais para um workflow produtivo, mas para os casos em que realmente há uma aversão ao terminal, o LESS traz uma opção que nenhum dos outros preprocessadores trazem: o uso do LESS do lado do cliente.&lt;/p&gt;

&lt;p&gt;Basicamente, ele compila os arquivos less “on-the-fly”, do lado do cliente, no browser mesmo, usando JavaScript. Basta você seguir as &lt;a href=&quot;http://lesscss.org/#client-side-usage&quot;&gt;instruções&lt;/a&gt; que essa funcionalidade pode ser facilmente alcançada. É bom deixar claro que o uso dessa funcionalidade não é nada interessante para projetos reais em produção, pois um simples JavaScript desativado pode acabar com seus estilos, sem falar que prejudica um tanto a performace da página, mas é uma boa pedida para aprendizado com projetos locais, facilita bastante as coisas no começo, caso queira testar o LESS sem ter muito trabalho.&lt;/p&gt;

&lt;p&gt;Uma outra opção de preprocessador muito interessante para iniciantes é o &lt;a href=&quot;http://www.myth.io/&quot;&gt;Myth&lt;/a&gt;, mas ele é tema de outro post, então sem spoilers por aqui.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Qualquer dúvida nos comentários. Se gostou do post, ajude a divulgar o blog, faço ele apenas por amor, sem monetização nenhuma, então quanto mais longe chegar, mais “bem pago” eu serei ♥.&lt;/p&gt;
</description>
        <pubDate>Sun, 19 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://localhost:4000/2016/06/19/less-uma-boa-escolha-para-iniciantes.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/06/19/less-uma-boa-escolha-para-iniciantes.html</guid>
        
        <category>frontend</category>
        
        
      </item>
    
      <item>
        <title>Vamos falar sobre o VIM</title>
        <description>&lt;p&gt;Falando um pouco sobre o editor de texto VIM.&lt;/p&gt;

&lt;!--bora--&gt;
&lt;div class=&quot;post-img-container&quot;&gt;
	&lt;img class=&quot;post-img&quot; src=&quot;/assets/post-imgs/vim.png&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Uma das maiores pautas de discussão que encontramos nos fóruns e grupos do facebook sobre workflow em geral é quanto ao editor de texto que cada um usa. Existe uma infinidade deles e eu já usei diversos. Mas acho que encontrei o mais completo e funcional. Vamos falar um pouco sobre ele? Bora.&lt;/p&gt;

&lt;h2 id=&quot;sobre-editores-de-texto&quot;&gt;Sobre editores de texto&lt;/h2&gt;

&lt;p&gt;Primeiramente, queria dizer que é essencial usar um editor de texto do seu gosto, que te deixa produtivo e que atende às suas necessidades.&lt;/p&gt;

&lt;p&gt;O fato é: eu já usei todos os editores do mundo, acho. Levemos em consideração que eu não gosto de IDEs. Usar Java + NetBeans foi o bastante para eu entender que IDEs, apesar de nos deixar bastante produtivos nos tirando certas obrigações, elas também nos deixam mal acostumados. A IDE nada mais é que um editor de texto cheio de plugins que você quase não usa, que deixa tudo mais lento que o normal e que acaba criando uma camada a mais entre você e o código.&lt;/p&gt;

&lt;p&gt;IDE é uma boa solução para bons programadores, que já sabem como determinada linguagem funciona e só querem se preocupar em programar, para qualquer um que queira aprender mais a fundo sobre funcionamento de algumas configurações e entendimento geral da linguagem/workflow, programar usando um editor de texto e configurando seus próprios plugins pode ser bem mais interessante.&lt;/p&gt;

&lt;p&gt;O primeiro editor que usei foi o sublime 2 e ele ainda está entre os meus favoritos. O ecossistema que o sublime criou foi realmente inovador e ainda hoje é um dos editores mais indicados para todos os níveis. Usei o Atom, mas no fim das contas é muito pesado pra um editor. Usei o Visual Studio Code 2015, que é bem parecido com o Atom e menos pesado, mas não há tantos plugins assim. Usei o Builder, um editor do Gnome, mas ele é muito limitado ainda para desenvolvimento web. No fim das contas, pra ser bom pra mim, o editor tinha que ser leve, rápido e com um ecossistema interessante de plugins e ferramentas. Depois de tudo, decidi voltar então para o Sublime, que satisfazia todas essas características.&lt;/p&gt;

&lt;p&gt;Até que eu conheci o VIM.&lt;/p&gt;

&lt;h2 id=&quot;uma-história-de-amor-melhor-que-crepúsculo&quot;&gt;Uma história de amor melhor que crepúsculo&lt;/h2&gt;

&lt;p&gt;Me pareceu um tanto surreal a ideia de um editor de texto onde eu não usaria o mouse. Achei que seria terrível no começo, e talvez até tenha sido, mas a leveza, rapidez e os plugins me fizeram arriscar um pouco de tempo para me tornar produtivo nele.&lt;/p&gt;

&lt;p&gt;A premissa do VIM é usar o mínimo do mouse possível. Isso acaba sendo interessante porque a gente, obviamente, escreve o código com o teclado, configurar e manipular o editor com o mesmo periférico que usamos pra escrever os códigos acaba sendo uma mão na roda. Não é preciso tirar a mão do teclado e perder 2s pra selecionar aquela opção do editor, só preciso digitar um comando e dar um enter. Acredite ou não, isso faz bastante diferença.&lt;/p&gt;

&lt;p&gt;Enfim, não vim aqui pra defender o VIM e seu uso, seus benefícios e produtividade. Vim dar umas dicas rápidas para iniciantes. Se quiser saber mais sobre o editor, dê uma lida no &lt;a href=&quot;https://brizeno.wordpress.com/2014/07/24/por-que-voce-tambem-gostaria-de-utilizar-vim/&quot;&gt;texto do Marcos Brizeno&lt;/a&gt; e no do &lt;a href=&quot;https://woliveiras.com.br/posts/Comecando-com-o-editor-de-texto-VIM/&quot;&gt;Willian Oliveira&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;algumas-dicas-pra-começar&quot;&gt;Algumas dicas pra começar&lt;/h2&gt;

&lt;p&gt;Eu perdi um dia quase todo pesquisando sobre configurações do vim, sobre plugins e sobre como deixá-lo mais user-friendly. E não me arrependo, descobri ferramentas bem interessantes que me ajudaram bastante. E como eu sou muito gente fina, vou passar as dicas pra vocês.&lt;/p&gt;

&lt;h3 id=&quot;aprendendo&quot;&gt;Aprendendo&lt;/h3&gt;

&lt;p&gt;Existem vários meio de aprender a usar o VIM e você pode fazer isso antes ou depois de configurar ele com as próximas dicas que eu vou dar.&lt;/p&gt;

&lt;p&gt;O tutorial mais indicado para aprendizado é o tutorial do próprio VIM, o &lt;code&gt;vimtutor&lt;/code&gt;. Digite no seu terminal &lt;code&gt;vimtutor&lt;/code&gt; e siga as instruções. Não é necessário fazer tudo de uma vez, como disse o &lt;a href=&quot;https://woliveiras.com.br/posts/Comecando-com-o-editor-de-texto-VIM/&quot;&gt;Willian Oliveira&lt;/a&gt; em seu texto que me auxiliou bastante. O mais interessante é que o &lt;code&gt;vimtutor&lt;/code&gt; aborda na prática, com exercícios, o que faz o aprendizado ser bem dinâmico.&lt;/p&gt;

&lt;p&gt;Outra opção é pegar os comandos do VIM e ir testando na prática, que é basicamente o que o &lt;code&gt;vimtutor&lt;/code&gt; faz, mas você terá mais liberadade pra testar e para fazer seu próprio caminho. Traduzi há um tempo atrás um pequeno guia para iniciantes e intermediários que pode ser interessante, &lt;a href=&quot;https://gist.github.com/netoguimaraes/ef6039d565dd5c8343fc&quot;&gt;clique aqui&lt;/a&gt; para ver.&lt;/p&gt;

&lt;p&gt;A opção em português mais completa é um projeto do Willian Oliveira, o projeto &lt;a href=&quot;https://woliveiras.com.br/vimparanoobs/&quot;&gt;VIM para noobs&lt;/a&gt;. Ele dá todo um embasamento para você se tornar um ninja do VIM.&lt;/p&gt;

&lt;h3 id=&quot;gerando-o-vimrc&quot;&gt;Gerando o .vimrc&lt;/h3&gt;

&lt;p&gt;É vero que para usar o VIM como editor de texto para programação não é tão simples no começo. Não é simplesmente abrir e começar a escrever os códigos que o syntax highlight já vai estar lá, a identação configurada, os snippets nem nada. O VIM vem praticamente inutilizável para programar em sua versão padrão, que já vem instalada em distros Linux. Para configurá-lo, temos que editar um arquivo de configuração chamado &lt;code&gt;.vimrc&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Se você quiser entender todas as variáveis, entender como tudo funciona no VIM e escrever seu próprio arquivo de configuração na mão, eu vou te dar total apoio. Mas eu não fiz isso. Existem ferramentas bem simples feitas para auxiliarem nós, os preguiçosos, iniciantes e espertalhões, a configurarmos o nosso VIM da forma mais rápida possível. Temos o &lt;a href=&quot;http://vimconfig.com/&quot;&gt;vimconfig.com&lt;/a&gt;, que é muito simples e rápido e temos o &lt;a href=&quot;http://vim-bootstrap.com/&quot;&gt;vim-bootstrap.com&lt;/a&gt; que é um pouco mais completo, mas também muito simples e que dá suporte também para o NeoVim, um fork do VIM.&lt;/p&gt;

&lt;h3 id=&quot;sobre-os-plugins-do-vim&quot;&gt;Sobre os plugins do VIM&lt;/h3&gt;

&lt;p&gt;São infinitos. Sério. E são muito robustos, pois o VIM está sendo usado há 25 anos (mais velho que eu!) e tem alguns plugins com idade bem avançada, o que significa que foram maturados o suficiente pela comunidade.&lt;/p&gt;

&lt;p&gt;Para procurar, instalar e configurar os plugins que uso no meu editor, utilizei o site &lt;a href=&quot;http://vimawesome.com/&quot;&gt;vimawesome.com&lt;/a&gt;, que fornece uma busca simples, sistema de tags e explicações sobre os plugins. No vim awesome também podem ser encontrados temas para o VIM, que pode ser interessante pra quem se importa com o visual. E tem muita coisa interessante lá. &lt;a href=&quot;http://www.pinceladasdaweb.com.br/blog/2014/02/18/plugins-do-vim-para-frontend/&quot;&gt;Esse artigo&lt;/a&gt; do Marco Bruno me deu um norte bem interessante sobre plugins para frontenders. Veja também &lt;a href=&quot;http://spf13.com/post/the-15-best-vim-plugins&quot;&gt;esse post&lt;/a&gt; e &lt;a href=&quot;http://joelhooks.com/blog/2013/04/23/5-essential-vim-plugins/&quot;&gt;esse&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Recomendo o plugin do &lt;a href=&quot;http://vimawesome.com/plugin/nerdtree-red&quot;&gt;NERDTree&lt;/a&gt; e o &lt;a href=&quot;http://vimawesome.com/plugin/vim-polyglot&quot;&gt;vim-polyglot&lt;/a&gt; como essencial, o resto é bem pessoal.&lt;/p&gt;

&lt;p&gt;O VIM é um universo gigante e tentei dar um panorama geral para iniciantes se introduzirem nesse ecossistema de forma rápida e simples para depois se aprofundar. Qualquer dúvida, nos comentários.&lt;/p&gt;
</description>
        <pubDate>Mon, 13 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://localhost:4000/2016/06/13/vamos-falar-sobre-o-vim.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/06/13/vamos-falar-sobre-o-vim.html</guid>
        
        <category>misc</category>
        
        
      </item>
    
      <item>
        <title>II Encontro da comunidade UX Design - Natal-RN</title>
        <description>&lt;p&gt;Resumão do segundo encontro da comunidade de UX Design de Natal.
&lt;!--bora--&gt;&lt;/p&gt;
&lt;div class=&quot;post-img-container&quot;&gt;
	&lt;img class=&quot;post-img&quot; src=&quot;/assets/ux.png&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;UX Design é um termo que muito tem se ouvido por todos os lados na área de desenvolvimento web. Tem crescido muito o número de ferramentas, o número de pessoas interessadas no assunto e a quantidade de bons conteúdos na web. Aqui em Natal-RN não foi diferente, há dois meses foi criada a comunidade de UX Design Natal. A iniciativa partiu de profissionais da área que sentiam necessidade de discussão e união de pessoas com tais interesses para que pudessem surgir ideias, projetos e principalmente: para que o conhecimento fosse difundido (leia mais sobre o surgimento do grupo &lt;a href=&quot;https://medium.com/ux-design-natal/difundindo-o-ux-design-em-natal-rn-eacb64f231af#.xjizkebrx&quot;&gt;aqui&lt;/a&gt;). Ontem houve o segundo encontro do grupo e vou falar um pouco sobre como foi.&lt;/p&gt;

&lt;p&gt;Os encontros presenciais do grupo tem como objetivo fomentar a troca de conhecimentos e experiência entre todos os membros para que o UX Design seja cada vez mais difundido e entendido. No II encontro tivemos a presença do estúdio &lt;a href=&quot;http://www.estudioproa.com/&quot;&gt;Proa&lt;/a&gt;, representado por &lt;a href=&quot;https://www.behance.net/augustoserquiz&quot;&gt;Augusto&lt;/a&gt; e &lt;a href=&quot;https://www.behance.net/mateustinoco&quot;&gt;Mateus&lt;/a&gt;. Eles foram convidados para nos mostrar o processo criativo do estúdio que fazem parte e nos ajudar a entender sobre como a experiência de usuário pode ser interessante para casos de produtos digitais e sobre como algumas metodologias de UX ajudam eles na hora de entender as perspectivas do lado dos clientes deles.&lt;/p&gt;

&lt;p&gt;O espírito do estúdio Proa é algo que tem que ser levado em consideração antes de qualquer coisa. Como o nome já diz (“proa” é a parte dianteira do barco), o estúdio veio à tona com a proposta de inovar o mercado e trazer uma nova ideia sobre o que é design, sobre como devemos tratar o design e sobre como devemos trabalhar com design.&lt;/p&gt;

&lt;p&gt;Ao longo da fala dos designers, pudemos perceber alguns pontos interessantes que irei listar aqui.&lt;/p&gt;

&lt;h2 id=&quot;designers-desenham-soluções&quot;&gt;Designers desenham soluções&lt;/h2&gt;

&lt;p&gt;Muita gente confunde o trabalho dos designers com algo meramente artístico. Se você pensa assim, está muito enganado. Mais do que nunca, vivemos num momento em que tudo tem que ter um porquê e uma motivação muito forte, se não for assim, acaba perdendo o sentido no meio de tanta informação que temos a nossa disposição. Vendo as metodologias apresentadas pelos rapazes do Estúdio Proa, ficou muito visível que o que eles fazem é um estudo específico pra cada caso, onde se busca a melhor solução viável com o fim de suprir a necessidade do cliente e do usuário. Esse é um aspecto bastante presente em metodologias de UX: nada é por acaso, tudo tem um motivo. Se não tem um motivo, é algo que pode facilmente ser descartado.&lt;/p&gt;

&lt;h2 id=&quot;clientes-nem-sempre-sabem-o-que-querem&quot;&gt;Clientes nem sempre sabem o que querem.&lt;/h2&gt;

&lt;p&gt;Apesar de teoricamente serem os maiores conhecedores dos seus negócios, às vezes os clientes não sabem lidar com todo o significado que uma identidade visual, um site ou um cartão de visitas pode ter. É papel do designer entender quais as necessidades do cliente e ajudá-lo a entender quais as possibilidades. Apesar de conhecer seu negócio, nem sempre eles têm ideia do poder da experiência do usuário e como melhorar ela. Um bom design visual está diretamente ligado à experiência de usuário, portanto, ao entender as necessidades de um projeto visual, acaba-se também entendendo sua profundidade dentro do contexto dos usuários.&lt;/p&gt;

&lt;h2 id=&quot;saiba-porque-você-está-usando-o-que-você-está-usando&quot;&gt;Saiba porque você está usando o que você está usando&lt;/h2&gt;

&lt;p&gt;Todo mercado que tem mais de uma opção para escolha possui uma variedade de características em cada uma dessas opções. Portanto, na produção criativa não é diferente. Se você produz algo, é importante entender o que você quer atingir com aquilo e entender quais as melhores maneiras de fazer isso. Pensar nisso na perspectiva do usuário é onde a UX entra. Pensar não nos motivos para você que está produzindo e sim nos motivos para quem estará consumindo quando finalizado. Pudemos ver isso nos cases mostrados, onde haviam algumas características bem peculiares que tiveram que ser entendidas a fundo para que soluções pudessem ser achadas e só então as ferramentas para a implementação serem selecionadas.&lt;/p&gt;

&lt;h2 id=&quot;concluindo&quot;&gt;Concluindo&lt;/h2&gt;

&lt;p&gt;A apresentação do processo criativo do estúdio Proa foi de grande soma para o encontro de UX, pois pudemos perceber em suas metodologias a utilização de diversos conceitos de User Experience, entendendo suas aplicações na prática. Foi interessante entender como tais aspectos de UX atingem um estúdio de design, pois no meu caso, vejo UX muito mais na área de desenvolvimento web e as aplicações em outros nichos ainda é um mistério interessante de ser descoberto. Mas no fim das contas, é um mistério previsível, afinal todos nós queremos entender o usuário e suas necessidades para entregar as melhores soluções possíveis, as diferenças são apenas mínimos detalhes técnicos do nicho.&lt;/p&gt;

&lt;p&gt;O evento foi bastante produtivo e descontraído e reuniu um número considerável de pessoas. Acho que estamos criando um ecossistema interessante com tais iniciativas. Se você tem interesse na área, entre no nosso &lt;a href=&quot;https://www.facebook.com/groups/105147809888834/?fref=ts&quot;&gt;grupo no facebook&lt;/a&gt;, apesar dos encontros presenciais serem aqui em Natal, os links e discussões são universais. Sinta-se à vontade pra compartilhar textos e experiências, qualquer coisa que some é bem vinda.&lt;/p&gt;
</description>
        <pubDate>Thu, 09 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://localhost:4000/2016/06/09/Encontro-II-Comunidade-UX-Design-Natal.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/06/09/Encontro-II-Comunidade-UX-Design-Natal.html</guid>
        
        <category>uxdesign</category>
        
        
      </item>
    
      <item>
        <title>Dicas de um frontend junior 2</title>
        <description>&lt;p&gt;Algumas dicas de um frontenders junior para outros frontenders juniors.
&lt;!--bora--&gt;&lt;/p&gt;

&lt;div class=&quot;post-img-container&quot;&gt;
	&lt;img class=&quot;post-img&quot; src=&quot;http://2chie424y5ug2kfkkypuhcvwq2.wpengine.netdna-cdn.com/files/2014/05/wip1.jpg&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Há uns dias escrevi um post em que eu, desenvolvedor júnior, dava umas dicas sobre a área de frontend que aprendi na prática nos últimos meses trabalhando em uma startup que envolve tecnologia e educação. Acredito que aprendi bastante coisa com esse período de prática, porque apesar de ser um ambiente interessante e estimulante, eu trabalho basicamente sozinho e quando você trabalha sozinho e tem que se virar pra sanar suas dúvidas, pra criar um workflow decente e ainda fazer um pouco de Design, UX e tudo mais, no mínimo você vai aprender algumas coisas.&lt;/p&gt;

&lt;p&gt;Então aqui vai mais algumas dicas que tenho para os amigos iniciantes na área.&lt;/p&gt;

&lt;h2 id=&quot;não-tenha-medo-de-desenvolver-as-coisas&quot;&gt;Não tenha medo de desenvolver as coisas&lt;/h2&gt;

&lt;p&gt;Meu esquema de trabalho é sempre o seguinte: o designer faz uma proposta de layout e eu vou implementando e conversando com ele sobre algumas melhorias para o ecossistema web. No começo apareceram algumas coisas que eu não tinha a mínima ideia de como ia fazer, mas eu sempre disse que dava pra implementar todas as propostas dadas por ele. E porque eu disse isso? Porque quando alguém pergunta se a gente sabe fazer algo e nos dá um prazo pra responder, a melhor alternativa é responder que sim e se não sabe, aprender a fazer da melhor forma possível. E foi o que eu sempre fiz. E isso foi um ótima estratégia, porque eu aprendi diversas coisas que eu não aprenderia se tivesse dito apenas pra ele exportar os assets todos e fizesse um site cheio de imagens. O que nos leva pra nossa próxima dica.&lt;/p&gt;

&lt;h2 id=&quot;use-o-mínimo-de-assets-possíveis&quot;&gt;Use o mínimo de assets possíveis&lt;/h2&gt;

&lt;p&gt;Assets são, em suma, arquivos que utilizamos para complementar nossas páginas webs, como imagens, arquivos de fontes e folhas de estilo. É óbvio que você não vai se limitar a usar 2 ou 3 imagens no site se o site for um galeria de imagens. Aqui falo de um conceito de design utilizado no frontend tanto para melhorar a performace do projeto quanto para melhorar as habilidades de estilização com CSS. O conceito de design que quero introduzir é o de “não use mais do que o necessário”. Se eu for procurar, vou achar o nome do autor que fala sobre isso, mas agora não é o foco. Apenas guarde na cabeça “não use mais do que o necessário”.&lt;/p&gt;

&lt;p&gt;Sabe quando você usa uma imagem no logo quando podia utilizar uma heading tag ou quando poderia usar um ícone daquela lib que você importou ao invés de usar uma imagem como ícone do facebook? Pois é. Esteja sempre pensando “será que isso é realmente necessário?”, pois às vezes enchemos nosso projeto de coisas que na prática são inúteis ou poderiam ser substituídas por outras. Às vezes demoramos um pouco mais para chegar num determinado efeito visual com CSS que poderia ser resolvido apenas com a utilização de uma imagem na página, mas será que seria a solução mais ideal mesmo?&lt;/p&gt;

&lt;p&gt;Nos últimos tempos, animações, transitions, &lt;a href=&quot;http://codepen.io/MarioSkynex/pen/MeYJGR&quot;&gt;box-shadow&lt;/a&gt;, Canvas e &lt;a href=&quot;http://willianjusten.com.br/por-que-usar-svg/&quot;&gt;SVG&lt;/a&gt; são tecnologias que têm sido muito utilizadas para criação de designs muito eficientes e bonitos. Pode ser uma boa estudar isso um pouco mais a fundo se te interessa a área de design também, além de frontend.&lt;/p&gt;

&lt;h2 id=&quot;desenvolva-um-starter&quot;&gt;Desenvolva um starter&lt;/h2&gt;

&lt;p&gt;Sabe quando você tem que começar algum projeto novo e fica criando os arquivos e nomeando e modularizando em pastas e perdendo tempo fazendo algo que não soma nada no teu aprendizado? Pois é, você precisa ser mais preguiçoso. É aquela velha história de que todo programador é um preguiçoso, mas preguiçoso o suficiente pra escrever um starter que faça tudo isso pra você.&lt;/p&gt;

&lt;p&gt;Existem diversos jeitos de fazer isso. O mais simples, ao meu ver, é usando o npm. Você cria um projeto com todos os arquivos iniciais criados, gera um pacote do npm e publica ele. Quando quiser utilizá-lo é só chamar pelo próprio npm. Outra forma é criando no github um repositório e baixando ou clonando sempre que quiser começar um novo projeto, mas .git deverá ser apagado sempre que iniciado um novo projeto, caso se queira usar o git para versionar o novo projeto. Pode ser feito também através de um script do bash, caso você seja familirizado com shellscript e linux. O que importa é automatizar esse processo.&lt;/p&gt;

&lt;p&gt;Você pode também utilizar um starter já desenvolvido. Existem vários por aí, alguns frameworks já até fornecem os seus, como o ionic. Você também pode utilizar ferramentas como o &lt;a href=&quot;http://yeoman.io/&quot;&gt;Yeoman&lt;/a&gt;, o importante é não perder tempo criando tudo na mão.&lt;/p&gt;

&lt;h2 id=&quot;desenvolva-um-framework&quot;&gt;Desenvolva um framework&lt;/h2&gt;

&lt;p&gt;Este é um tópico que eu ainda não botei em prática por falta de tempo, mas que pretendo no futuro aplicar. Criar um framework não quer dizer criar um Angular ou React da vida, mas sim algo como o &lt;a href=&quot;http://getskeleton.com/&quot;&gt;skeleton&lt;/a&gt; ou o &lt;a href=&quot;http://purecss.io/&quot;&gt;Pure&lt;/a&gt;. Peguei essa dica com o &lt;a href=&quot;https://github.com/cjpatoilo&quot;&gt;cjpatolio&lt;/a&gt;, desenvolvedor do &lt;a href=&quot;http://milligram.github.io/&quot;&gt;Milligram&lt;/a&gt;;&lt;/p&gt;

&lt;p&gt;Em um tópico do fórum &lt;a href=&quot;https://github.com/frontendbr/forum/issues/164&quot;&gt;FrontendBR&lt;/a&gt; sobre projetos open source, o autor falou sobre como o desenvolvimento desse framework foi interessante para o aprendizado dele. Acredito que é interessante porque quando se propõe desenvolver algo para outros desenvolvedores, seu cuidado tem que ser redobrado para escrever código legível, reutilizável e funcional. E se não escrever, a comunidade vai criticar até que ele fique bom o suficiente.&lt;/p&gt;

&lt;p&gt;Um exemplo disso é esse blog, que recebo algumas críticas de vez em quando e acabo sempre melhorando uma coisinha aqui e outra ali, tanto no conteúdo como no layout.&lt;/p&gt;

&lt;p&gt;Essas foram mais algumas dicas de um desenvolvedor frontend júnior. Críticas e sugestões nos comentários. Até a próxima.&lt;/p&gt;
</description>
        <pubDate>Mon, 06 Jun 2016 00:00:00 -0300</pubDate>
        <link>http://localhost:4000/2016/06/06/Dicas-de-um-Frontend-Junior-2.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/06/06/Dicas-de-um-Frontend-Junior-2.html</guid>
        
        <category>frontend</category>
        
        
      </item>
    
      <item>
        <title>.css-comentado 01 - Thumbnail com botão oculto</title>
        <description>&lt;p&gt;mais um post da série .css-comentado&lt;/p&gt;

&lt;!--bora--&gt;

&lt;div class=&quot;post-img-container&quot;&gt;
	&lt;img class=&quot;post-img&quot; src=&quot;/assets/comment.png&quot; /&gt;
&lt;/div&gt;
&lt;p&gt;Ao longo dos meus estudos, foi notável a grande quantidade de tutoriais com códigos prontos que achei pela internet. Eles sempre nos dão a solução para o problema, porém, nunca te explicam direito o porquê de tais soluções. Então decidi fazer uma série de tutoriais que além de terem o código, acompanham uma explicação um pouco mais detalhada sobre as soluções adotadas. Não sei se esse formato de tutorial é bem aceito, mas aqui fica minha proposta. Hoje falaremos sobre thumbnails com botões ocultos.&lt;/p&gt;

&lt;p&gt;Aqui temos o nosso exemplo funcionando com o código completo:&lt;/p&gt;

&lt;p data-height=&quot;400&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;MeWvme&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;netoguimaraes&quot; data-embed-version=&quot;2&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/netoguimaraes/pen/MeWvme/&quot;&gt;MeWvme&lt;/a&gt; by João Neto Guimarães (&lt;a href=&quot;http://codepen.io/netoguimaraes&quot;&gt;@netoguimaraes&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Para quem já entende de CSS consideravelmente, o exemplo no codepen já basta para o entendimento do efeito. Mas meu foco aqui é justamente quem tem certa dificuldade com a implementação e quem não entende exatamente o que está acontecendo no código.&lt;/p&gt;

&lt;p&gt;Vamos dissecar as coisas melhor aqui.&lt;/p&gt;

&lt;h2 id=&quot;estruturando-as-coisas&quot;&gt;Estruturando as coisas&lt;/h2&gt;

&lt;p&gt;Se você sabe exatamente o que quer fazer e como vai fazer, a melhor coisa pra começar a construção de qualquer elemento é escrever todo o código HTML que você irá precisar. É comum ir escrevendo o HTML de acordo com as necessidades, mas sempre que possível é interessante escrever o HTML todo de uma só vez para dividirmos melhor as coisas, mas isso vai de cada um. Então eu escrevi o seguinte código:&lt;/p&gt;

&lt;pre&gt;
	&lt;code class=&quot;language-markup&quot;&gt;
		&amp;lt;a href=&amp;quot;#&amp;quot; class=&amp;quot;container&amp;quot;&amp;gt;
		  &amp;lt;img class=&amp;quot;container-img&amp;quot; src=&amp;quot;https://static.pexels.com/photos/6413/people-eyes-playing-young.jpg&amp;quot; alt=&amp;quot;a boy with a ball&amp;quot;/&amp;gt;
		  &amp;lt;span class=&amp;quot;hidden-link&amp;quot; &amp;gt;Bot&amp;atilde;o&amp;lt;/span&amp;gt;
		&amp;lt;/a&amp;gt;
	&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Um código simples. Uma &lt;code&gt;a&lt;/code&gt; com uma &lt;code&gt;img&lt;/code&gt; e um &lt;code&gt;span&lt;/code&gt;, que simula um botão, inseridos nela. O elemento &lt;code&gt;&amp;lt;a href=&amp;quot;#&amp;quot; class=&amp;quot;container&amp;quot;&amp;gt;&lt;/code&gt; funcionará como um elemento de bloco aqui, como uma &lt;code&gt;div&lt;/code&gt;. Usamos ele ao invés de uma &lt;code&gt;div&lt;/code&gt; para que todo o corpo do container funcione como um link clicável, auxiliando assim a acessibilidade.&lt;/p&gt;

&lt;p&gt;Perceba que o nome da classe do botão já indica uma das funcionalidades que teremos que implementar: a sua invisibilidade. Há várias formas de implementar invisibilidade com CSS3. A primeira é declarando a opacidade com o valor 0 (&lt;code&gt;opacity: 0;&lt;/code&gt;). Dessa forma, o elemento não irá aparecer, porém continuará ocupando espaço na página, apesar dele não estar visível, ele continua lá. Essa solução é praticamente igual a declarar a visibilidade igual a “escondido” (&lt;code&gt;visibily: hidden;&lt;/code&gt;), vamos entender suas diferenças no fim do artigo. Uma outra solução é definir &lt;code&gt;display: none;&lt;/code&gt;. Ao contrário das duas primeiras, nessa solução o elemento some por completo do documento, seu epaço é tomado pelos outros elementos, dependendo das configurações do layout. Mais à frente iremos entender qual dessas é a melhor solução para tornar o botão inicialmente invisível.&lt;/p&gt;

&lt;h2 id=&quot;estilizando-as-coisas&quot;&gt;Estilizando as coisas&lt;/h2&gt;

&lt;p&gt;As primeiras coisas que escreveremos no nosso CSS serão as estilizações simples dos elementos que temos no nosso HTML. Segue o código:&lt;/p&gt;

&lt;pre&gt;
	&lt;code class=&quot;language-css&quot;&gt;
		.container{
		  position: relative;
		  height: 400px;
		  width: 400px;
		  overflow: hidden;
		  border: 1px solid black;
		}
		.container-img{
		  height: 100%;
		  width: auto;
		}
		.hidden-pseudobutton{
		  display: block;
		  position: absolute;
		  width: 150px;
		  height: 50px;
		  top: 50%;
		  left: 50%;
		  margin: -25px 0px 0px -75px;
		  padding: 10px 50px;
		  opacity: 0;
		  background-color: #008cc4;
		  border: none;
		  border-radius: 30px;
		  font-size: 1.3em;
		  color: white;
		  cursor: pointer;
		}
	&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Primeiro temos a estilização do nosso &lt;code&gt;container&lt;/code&gt; primário, que terá a imagem inserida dentro dele. O &lt;code&gt;position: relative;&lt;/code&gt; é opcional, depende de como será construído o layout, apenas por exemplo eu o coloquei aqui. Defini suas e medidas de altura e largura e defini &lt;code&gt;overflow: hidden;&lt;/code&gt; que vai garantir que mesmo que a imagem tenha altura ou largura maior que o container, ela não ultrapassará as medidas do container e será clipada. Adicionei também uma borda apenas para melhor vizualização dos limites do container.&lt;/p&gt;

&lt;p&gt;Depois temos o seletor que estiliza a &lt;code&gt;img&lt;/code&gt;. Aqui temos que a altura será de 100%, ou seja, sempre a imagem ocupará toda a altura do container pai, porém a largura vai variar automaticamente, com a propriedade &lt;code&gt;auto&lt;/code&gt; no seletor &lt;code&gt;width&lt;/code&gt;. Pra que isso serve? Para que a imagem não fique distorcida. Ela ocupará toda a altura, mas a largura se ajustará de acordo com a proporção da mesma. Essa dica é valiosa porque funciona independente da altura do container.&lt;/p&gt;

&lt;p&gt;Logo depois temos a estilização do pseudobotão. Estilizações de itens como botões, links e inputs são estilizações em geral longas, pois seus estilos padrões são muito distantes do que consideramos hoje em dia algo agradável e harmônico. O seguinte código é um jeito de centralizar elementos com &lt;code&gt;position: absolute;&lt;/code&gt; e pode ser usado em diversos casos.&lt;/p&gt;
&lt;pre&gt;
	&lt;code class=&quot;language-css&quot;&gt;
		display: block;
		position: absolute;
		width: 150px;
		height: 50px;
		top: 50%;
		left: 50%;
		margin: -25px 0px 0px -75px;
		/* -------------------------------------------------------------*/
		/* Centralizando elemento absoluto vertical e horizontalmente	*/
		/* margin-top = -(altura do elemento/2)px 						*/
		/* margin-top = -(150/2)px -&amp;gt; margin do top = -75px 			*/
		/* margin-left = -(largura do elemento/2)px 					*/
		/* margin-left = -(50/2)px -&amp;gt; margin do top = -25px 			*/
	&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;O que acontece é: as propriedades &lt;code&gt;top&lt;/code&gt; e &lt;code&gt;left&lt;/code&gt; com valores iguais a &lt;code&gt;50%&lt;/code&gt; fazem com que o elemento comece a ser apresentado exatamente no meio do container e dependendo da altura e largura, cresça para baixo e para a direita. Se pegarmos os valores exatos da metade da largura do elemento e adcionarmos a uma margem negativa para a esquerda, temos esse elemento centralizado na horizontal. Se pegarmos o valor exato da altura e adicionarmos à margem negativa do topo, teremos esse elemento centralizado na vertical, logo, o elemento está posicionado exatamente no centro do container.
O resto das estilizações são puramente estíticas e não vou entrar em detalhes aqui.&lt;/p&gt;

&lt;h2 id=&quot;criando-as-transições&quot;&gt;Criando as transições&lt;/h2&gt;

&lt;p&gt;Bem, agora que temos nossos elementos devidamente estilizados, precisamos dar vida ao nosso componente. Precisamos que ao passar o mouse em cima do container, haja um desfoque na imagem, uma leve rotação nela e também que apareça o pseudobotão, que na verdade é um link. Vamos iniciar a implementação pelo efeito que a imagem vai ter quando o mouse passar em cima do container.&lt;/p&gt;

&lt;p&gt;O código é este:&lt;/p&gt;
&lt;pre&gt;
	&lt;code class=&quot;language-css&quot;&gt;
		.container:hover &amp;gt; .container-img{
		  transition: 1s ease-in-out;
		  transform: scale(1.2,1.2) rotate(5deg);
		  -webkit-filter: blur(10px);
		  filter: blur(10px);
		}
	&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Agora vamos entender melhor. O efeito que queremos denota basicamente um &lt;code&gt;if (mouse.hover(container)){show.(button)}&lt;/code&gt;. Podíamos fazer isso com JavaScript, mas dá pra fazer com CSS, &lt;a href=&quot;http://blog.netoguimaraes.com.br/2016/05/26/Eu-nao-sei-fazer-tudo-com-css.html&quot;&gt;então vamos fazer com CSS&lt;/a&gt;. Para implementarmos isso, precisamos entender o funcionamento do seletor &lt;code&gt;&amp;gt;&lt;/code&gt;. Sua função é obter os elementos filhos de um seletor pai. No nosso caso, &lt;code&gt;.container&lt;/code&gt; é o pai e &lt;code&gt;.container-img&lt;/code&gt; é o filho. A mágica aqui acontece o adicionarmos a pseudoclasse &lt;code&gt;:hover&lt;/code&gt; ao seletor pai. Isso indica que o seletor filho só será agraciado com as propriedades do bloco de código quando o elemento pai estiver com o mouse em cima de si. Portanto, o código mostrado acima é nada mais nada menos do que uma abstração de um &lt;code&gt;if&lt;/code&gt;. “Se o mouse estiver em cima do container pai, faça com que o filho tenha essas propriedades que eu vou dar”. E magicamente, sem nenhum código JavaScript, temos um “&lt;code&gt;if&lt;/code&gt;” implementado e nosso componente quase pronto.&lt;/p&gt;

&lt;p&gt;Falando do efeito em si, nada mais é do que um zoom, uma rotação e um desfoque, respectivamente &lt;code&gt;scale(1.2,1.2) &lt;/code&gt;, &lt;code&gt;rotate(5deg)&lt;/code&gt; e &lt;code&gt;filter: blur(10px);&lt;/code&gt;. É importante perceber que estes efeitos não vão se comportar da mesma forma nos diversos navegadores, por isso é importante a adição de todos os prefixos, se você quiser que funcione em todos os browsers da forma correta. Para saber mais sobre suporte entre os browsers, acesse sempre &lt;a href=&quot;http://caniuse.com/#feat=css-filters&quot;&gt;este site&lt;/a&gt; e pesquise a determinada propriedade que você quer usar. Como o &lt;code&gt;filter&lt;/code&gt; é suportado pela grande maioria dos browsers atualizados, não vou me importar tanto com a compatibilidade, mas no futuro pretendo escrever um texto sobre isso e sobre como esse tema afeta nossa produção.&lt;/p&gt;

&lt;p&gt;Para fazermos com que o botão apareça sob as mesmas circunstâncias do efeito da foto, adicionamos o seguinte código:&lt;/p&gt;

&lt;pre&gt;
	&lt;code class=&quot;language-css&quot;&gt;
	.container:hover &amp;gt; .hidden-pseudobutton{
	  opacity: 1;
	}
	&lt;/code&gt;
&lt;/pre&gt;

&lt;p&gt;Agora temos o efeito acontecendo, porém de forma instantânea. Para que o efeito ocorra de forma gradual e harmônica, temos que adicionar a propriedade &lt;code&gt;transition&lt;/code&gt; em cada um dos elementos que vão fazer parte da animação, com seus determinados valores e aí teremos nosso código finalizado. Veja abaixo como ficou o código e o exemplo final:&lt;/p&gt;

&lt;p data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;MeWvme&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;netoguimaraes&quot; data-embed-version=&quot;2&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/netoguimaraes/pen/MeWvme/&quot;&gt;MeWvme&lt;/a&gt; by João Neto Guimarães (&lt;a href=&quot;http://codepen.io/netoguimaraes&quot;&gt;@netoguimaraes&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Aqui entendemos porque utilizamos o método da opacidade para fazer o elemento sumir e desaparecer. Para utilizarmos transições, precisamos tratar com propriedades animáveis. Das 3 que poderíamos usar, apenas a &lt;code&gt;visibility&lt;/code&gt; e a &lt;code&gt;opacity&lt;/code&gt; são animáveis, porém a opacity possui valores numerais, logo sua animação é mais fluida e pode ser mais manipulada. Para conseguirmos o efeito de fadeIn, apenas usando ela seria possível.&lt;/p&gt;

&lt;h1 id=&quot;considerações-finais&quot;&gt;Considerações Finais&lt;/h1&gt;
&lt;p&gt;Esse exemplo que fiz pode ser útil em casos onde a imagem é o mais importante e o link relacionado a ela esteja em segundo plano. Usei algo parecido na construção do meu portifólio, por exemplo. Pode ser útil em galerias de imagens e thumbnails de vídeos.&lt;/p&gt;

&lt;p&gt;Se você chegou até aqui e aprendeu algo novo, indique esse texto para alguém que possivelmente também aprenderá algo novo. Não falo isso por querer ganhar mais visualizações e nem nada, até porque meu blog não é monetizado. Quero apenas que este conhecimento que passei possa chegar a mais lugares. Qualquer dúvida ou sugestão deixem nos comentários que eu respondo assim que possível. Não sei se esse modelo de postagem é interessante ou não, na verdade, mas fiz o primeiro para testar, ficaria feliz com seu feedback.&lt;/p&gt;
</description>
        <pubDate>Sun, 29 May 2016 00:00:00 -0300</pubDate>
        <link>http://localhost:4000/2016/05/29/css-comentado-thumbnail-com-botao-oculto.html</link>
        <guid isPermaLink="true">http://localhost:4000/2016/05/29/css-comentado-thumbnail-com-botao-oculto.html</guid>
        
        <category>frontend</category>
        
        
      </item>
    
  </channel>
</rss>
